webpackJsonp([45],{

/***/ "K705":
/***/ (function(module, exports, __webpack_require__) {

var require;var require;!function(n){if(true)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.sqliteParser=n()}}(function(){return function n(t,e,r){function i(u,l){if(!e[u]){if(!t[u]){var o="function"==typeof require&&require;if(!l&&o)return require(u,!0);if(a)return a(u,!0);var s=new Error("Cannot find module '"+u+"'");throw s.code="MODULE_NOT_FOUND",s}var $=e[u]={exports:{}};t[u][0].call($.exports,function(n){var e=t[u][1][n];return i(e||n)},$,$.exports,n,t,e,r)}return e[u].exports}for(var a="function"==typeof require&&require,u=0;u<r.length;u++)i(r[u]);return i}({"./streaming":[function(n,t,e){"use strict";function r(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});e.SqliteParserTransform=function n(t){throw r(this,n),new Error("SqliteParserTransform is not available in this environment")},e.SingleNodeTransform=function n(t){throw r(this,n),new Error("SingleNodeTransform is not available in this environment")}},{}],1:[function(n,t,e){"use strict";function r(n,t,e){var r=(0,a.Tracer)();2===arguments.length&&"function"==typeof t&&(e=t,t={});var u="function"==typeof e,l={tracer:r,startRule:"start"};if(t&&t.streaming&&(l.startRule="start_streaming"),u)setTimeout(function(){var t=void 0,a=void 0;try{t=(0,i.parse)(n,l)}catch(n){a=n instanceof i.SyntaxError?r.smartError(n):n}e(a,t)},0);else try{return(0,i.parse)(n,l)}catch(n){throw n instanceof i.SyntaxError?r.smartError(n):n}}Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var i=n("./parser"),a=n("./tracer"),u=n("./streaming");r.createParser=function(){return new u.SqliteParserTransform},r.createStitcher=function(){return new u.SingleNodeTransform},r.NAME="sqlite-parser",r.VERSION="1.0.1",t.exports=e.default},{"./parser":2,"./streaming":"./streaming","./tracer":3}],2:[function(n,t,e){"use strict";function r(n,t,e,i){this.message=n,this.expected=t,this.found=e,this.location=i,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,r)}function i(){this.indentLevel=0}function a(n,t){function e(n,t){return{type:"literal",text:n,ignoreCase:t}}function a(n,t,e){return{type:"class",parts:n,inverted:t,ignoreCase:e}}function l(n){return{type:"other",description:n}}function o(t){var e,r=w[t];if(r)return r;for(e=t-1;!w[e];)e--;for(r=w[e],r={line:r.line,column:r.column};e<t;)10===n.charCodeAt(e)?(r.line++,r.column=1):r.column++,e++;return w[t]=r,r}function s(n,t){var e=o(n),r=o(t);return{start:{offset:n,line:e.line,column:e.column},end:{offset:t,line:r.line,column:r.column}}}function $(n){x<U||(x>U&&(U=x,M=[]),M.push(n))}function c(n,t,e){return new r(r.buildMessage(n,t),n,t,e)}function f(n){return n.split("").map(function(n){return n.charCodeAt(0)-32})}function p(t){var e,r=L[t],i=0,a=[],u=r.length,l=[],o=[],c=x;B.trace({type:"rule.enter",rule:F[t],description:j[t],location:s(c,c)});var f=545*x+t,_=P[f];if(_)return x=_.nextPos,_.result!==N?B.trace({type:"rule.match",rule:F[t],description:j[t],result:_.result,location:s(c,x)}):B.trace({type:"rule.fail",rule:F[t],description:j[t],location:s(c,c)}),_.result;for(;;){for(;i<u;)switch(r[i]){case 0:o.push(h[r[i+1]]),i+=2;break;case 1:o.push(void 0),i++;break;case 2:o.push(null),i++;break;case 3:o.push(N),i++;break;case 4:o.push([]),i++;break;case 5:o.push(x),i++;break;case 6:o.pop(),i++;break;case 7:x=o.pop(),i++;break;case 8:o.length-=r[i+1],i+=2;break;case 9:o.splice(-2,1),i++;break;case 10:o[o.length-2].push(o.pop()),i++;break;case 11:o.push(o.splice(o.length-r[i+1],r[i+1])),i+=2;break;case 12:o.push(n.substring(o.pop(),x)),i++;break;case 13:l.push(u),a.push(i+3+r[i+1]+r[i+2]),o[o.length-1]?(u=i+3+r[i+1],i+=3):(u=i+3+r[i+1]+r[i+2],i+=3+r[i+1]);break;case 14:l.push(u),a.push(i+3+r[i+1]+r[i+2]),o[o.length-1]===N?(u=i+3+r[i+1],i+=3):(u=i+3+r[i+1]+r[i+2],i+=3+r[i+1]);break;case 15:l.push(u),a.push(i+3+r[i+1]+r[i+2]),o[o.length-1]!==N?(u=i+3+r[i+1],i+=3):(u=i+3+r[i+1]+r[i+2],i+=3+r[i+1]);break;case 16:o[o.length-1]!==N?(l.push(u),a.push(i),u=i+2+r[i+1],i+=2):i+=2+r[i+1];break;case 17:l.push(u),a.push(i+3+r[i+1]+r[i+2]),n.length>x?(u=i+3+r[i+1],i+=3):(u=i+3+r[i+1]+r[i+2],i+=3+r[i+1]);break;case 18:l.push(u),a.push(i+4+r[i+2]+r[i+3]),n.substr(x,h[r[i+1]].length)===h[r[i+1]]?(u=i+4+r[i+2],i+=4):(u=i+4+r[i+2]+r[i+3],i+=4+r[i+2]);break;case 19:l.push(u),a.push(i+4+r[i+2]+r[i+3]),n.substr(x,h[r[i+1]].length).toLowerCase()===h[r[i+1]]?(u=i+4+r[i+2],i+=4):(u=i+4+r[i+2]+r[i+3],i+=4+r[i+2]);break;case 20:l.push(u),a.push(i+4+r[i+2]+r[i+3]),h[r[i+1]].test(n.charAt(x))?(u=i+4+r[i+2],i+=4):(u=i+4+r[i+2]+r[i+3],i+=4+r[i+2]);break;case 21:o.push(n.substr(x,r[i+1])),x+=r[i+1],i+=2;break;case 22:o.push(h[r[i+1]]),x+=h[r[i+1]].length,i+=2;break;case 23:o.push(N),0===k&&$(h[r[i+1]]),i+=2;break;case 24:D=o[o.length-1-r[i+1]],i+=2;break;case 25:D=x,i++;break;case 26:e=r.slice(i+4,i+4+r[i+3]).map(function(n){return o[o.length-1-n]}),o.splice(o.length-r[i+2],r[i+2],h[r[i+1]].apply(null,e)),i+=4+r[i+3];break;case 27:o.push(p(r[i+1])),i+=2;break;case 28:k++,i++;break;case 29:k--,i++;break;default:throw new Error("Invalid opcode: "+r[i]+".")}if(!(l.length>0))break;u=l.pop(),i=a.pop()}return P[f]={nextPos:x,result:o[0]},o[0]!==N?B.trace({type:"rule.match",rule:F[t],description:j[t],result:o[0],location:s(c,x)}):B.trace({type:"rule.fail",rule:F[t],description:j[t],location:s(c,c)}),o[0]}function _(n){return m(n)?Array.isArray(n)?n:[n]:[]}function m(n){return null!=n}function E(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ";return n.filter(function(n){return m(n)}).reduce(function(n,e){return""+n+C(e)+t},"").trim()}function d(n){return E(n,"")}function y(n){return E(n).toLowerCase()}function T(n){return n.filter(function(n){return m(n)}).reduce(function(n,t){return n.concat(t)},[])}function g(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"'",e=new RegExp(t+"{2}","g");return C(n).replace(e,t)}function C(){return _(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).join("")}function b(n){return C(n).trim()}function A(n){return b(n).toLowerCase()}function O(n){return Array.isArray(n)&&n.length>0&&m(n[0])}function R(n,t){return t.reduce(function(n,t){var e=u(t,4),r=(e[0],e[1]),i=(e[2],e[3]);return{type:"expression",format:"binary",variant:"operation",operation:A(r),left:n,right:i}},n)}t=void 0!==t?t:{};var I,N={},v={start:0,start_streaming:1},S=0,h=[function(n){return n},function(n,t){return{type:"statement",variant:"list",statement:T([n,t])}},function(n){return n},l("Type Definition"),function(n,t){return Object.assign(n,t)},function(n){return{type:"datatype",variant:n[0],affinity:n[1]}},l("Custom Datatype Name"),function(n,t){var e=y([n,t]),r="numeric";return/int/i.test(e)?r="integer":/char|clob|text/i.test(e)?r="text":/blob/i.test(e)?r="blob":/real|floa|doub/i.test(e)&&(r="real"),{type:"datatype",variant:e,affinity:r}},/^[\t ]/,a(["\t"," "],!1,!1),function(n){return n},l("Type Definition Arguments"),function(n,t){return{args:{type:"expression",variant:"list",expression:T([n,t])}}},function(n){return n},l("Null Literal"),function(n){return{type:"literal",variant:"null",value:A(n)}},l("Date Literal"),function(n){return{type:"literal",variant:"date",value:A(n)}},l("String Literal"),function(n,t){return{type:"literal",variant:"text",value:t}},l("Single-quoted String Literal"),function(n){return g(n,"'")},"''",e("''",!1),/^[^']/,a(["'"],!0,!1),l("Blob Literal"),/^[x]/i,a(["x"],!1,!0),function(n){return{type:"literal",variant:"blob",value:n}},function(n){return{type:"literal",variant:"text",value:n}},l("Number Sign"),function(n,t){return m(n)&&(t.value=d([n,t.value])),t},function(n,t){return{type:"literal",variant:"decimal",value:d([n,t])}},l("Decimal Literal"),function(n,t){return d([n,t])},function(n,t){return d([n,t])},l("Decimal Literal Exponent"),"e",e("E",!0),/^[+\-]/,a(["+","-"],!1,!1),function(n,t,e){return d([n,t,e])},l("Hexidecimal Literal"),"0x",e("0x",!0),function(n,t){return{type:"literal",variant:"hexidecimal",value:d([n,t])}},/^[0-9a-f]/i,a([["0","9"],["a","f"]],!1,!0),/^[0-9]/,a([["0","9"]],!1,!1),l("Bind Parameter"),function(n){return Object.assign({type:"variable"},n)},l("Numbered Bind Parameter"),function(n,t){return{format:"numbered",name:d([n,t])}},/^[1-9]/,a([["1","9"]],!1,!1),function(n,t){return d([n,t])},l("Named Bind Parameter"),/^[:@]/,a([":","@"],!1,!1),function(n,t){return{format:"named",name:d([n,t])}},l("TCL Bind Parameter"),"$",e("$",!1),":",e(":",!1),function(n,t,e){return Object.assign({format:"tcl",name:d([n,t])},e)},function(n){return{suffix:n}},l("EXISTS Expression"),function(n,t){return m(n)?{type:"expression",format:"unary",variant:"exists",expression:t,operator:A(n)}:t},l("EXISTS Keyword"),function(n,t){return y([n,t])},l("RAISE Expression"),function(n,t){return Object.assign({type:"expression",format:"unary",variant:A(n),expression:t},t)},l("RAISE Expression Arguments"),function(n){return Object.assign({type:"error"},n)},l("IGNORE Keyword"),function(n){return{action:A(n)}},function(n,t){return{action:A(n),message:t}},function(n){return n},function(n,t){return Object.assign(t,{expression:n})},function(n,t){return{type:"expression",format:"unary",variant:"operation",expression:t,operator:A(n)}},l("COLLATE Expression"),function(n){return Object.assign({type:"expression",format:"unary",variant:"operation",operator:"collate"},n)},function(n,t){return R(n,t)},function(n){return[null,n,null,{type:"literal",variant:"null",value:"null"}]},"not ",e("NOT ",!0),"null",e("NULL",!0),function(){return"not"},function(){return"is"},l("CAST Expression"),function(n,t,e){return{type:"expression",format:"unary",variant:A(n),expression:t,as:e}},l("Type Alias"),function(n){return n},l("CASE Expression"),function(n,t,e,r){return Object.assign({type:"expression",variant:A(n),expression:T([e,r])},t)},function(n){return{discriminant:n}},l("WHEN Clause"),function(n,t,e){return{type:"condition",variant:A(n),condition:t,consequent:e}},l("ELSE Clause"),function(n,t){return{type:"condition",variant:A(n),consequent:t}},function(n,t){return Object.assign(t,{left:n})},l("Comparison Expression"),function(n,t,e,r){return Object.assign({type:"expression",format:"binary",variant:"operation",operation:y([n,t]),right:e},r)},l("ESCAPE Expression"),function(n,t){return{escape:t}},l("BETWEEN Expression"),function(n,t,e){return{type:"expression",format:"binary",variant:"operation",operation:y([n,t]),right:e}},function(n,t){return R(n,[t])},function(n){return A(n)},l("IN Expression"),function(n,t,e){return{type:"expression",format:"binary",variant:"operation",operation:y([n,t]),right:e}},function(n){return n},l("Expression List"),function(n){return{type:"expression",variant:"list",expression:m(n)?n:[]}},function(n,t){return T([n,t])},l("Function Call"),function(n,t){return Object.assign({type:"function",name:n},t)},l("Function Call Arguments"),function(n){return{args:{type:"identifier",variant:"star",name:n}}},function(n,t){return!m(n)||t.expression.length>0},function(n,t){return{args:Object.assign(t,n)}},function(n){return{filter:A(n)}},l("Error Message"),function(n){return n},l("Statement"),function(n,t){return Object.assign(t,n)},l("QUERY PLAN"),function(n,t){return{explain:m(n)}},l("QUERY PLAN Keyword"),function(n,t){return y([n,t])},l("END Transaction Statement"),function(n,t){return{type:"statement",variant:"transaction",action:"commit"}},l("BEGIN Transaction Statement"),function(n,t,e,r){return Object.assign({type:"statement",variant:"transaction",action:"begin"},t,r)},function(n){return n},function(n){return{defer:A(n)}},l("ROLLBACK Statement"),function(n,t){return Object.assign({type:"statement",variant:"transaction",action:"rollback"},t)},l("TO Clause"),function(n){return{savepoint:n}},function(n){return A(n)},l("SAVEPOINT Statement"),function(n,t){return{type:"statement",variant:n,target:t}},l("RELEASE Statement"),function(n,t,e){return{type:"statement",variant:A(n),target:e}},l("ALTER TABLE Statement"),function(n,t,e){return Object.assign({type:"statement",variant:A(n),target:t},e)},l("ALTER TABLE Keyword"),function(n,t){return y([n,t])},l("RENAME TO Keyword"),function(n,t){return{action:A(n),name:t}},l("ADD COLUMN Keyword"),function(n,t){return{action:A(n),definition:t}},function(n,t){return Object.assign(t,n)},l("WITH Clause"),function(n,t,e){var r={variant:m(t)?"recursive":"common"};return O(e)&&(e=e.map(function(n){return Object.assign(n,r)})),{with:e}},function(n,t){return T([n,t])},l("Common Table Expression"),function(n,t){return Object.assign({type:"expression",format:"table",variant:"common",target:n},t)},function(n){return{expression:n}},function(n,t){return Object.assign(t,n)},l("ATTACH Statement"),function(n,t,e,r){return{type:"statement",variant:A(n),target:r,attach:e}},l("DETACH Statement"),function(n,t,e){return{type:"statement",variant:A(n),target:e}},l("VACUUM Statement"),function(n,t){return Object.assign({type:"statement",variant:"vacuum"},t)},function(n){return{target:n}},l("ANALYZE Statement"),function(n,t){return Object.assign({type:"statement",variant:A(n)},t)},function(n){return{target:n.name}},l("REINDEX Statement"),function(n){return{target:n.name}},l("PRAGMA Statement"),function(n,t,e){return{type:"statement",variant:A(n),target:t,args:{type:"expression",variant:"list",expression:e}}},function(n){return n},function(n){return/^(yes|no|on|off|false|true|0|1)$/i.test(n)},function(n){return{type:"literal",variant:"boolean",normalized:/^(yes|on|true|1)$/i.test(n)?"1":"0",value:n}},function(n){return A(n)},function(n){return{type:"identifier",variant:"name",name:n}},l("SELECT Statement"),function(n,t,e){return Object.assign(n,t,e)},l("ORDER BY Clause"),function(n){return{order:n.result}},l("LIMIT Clause"),function(n,t,e){return{limit:Object.assign({type:"expression",variant:"limit",start:t},e)}},l("OFFSET Clause"),function(n,t){return{offset:t}},function(n,t){return O(t)?{type:"statement",variant:"compound",statement:n,compound:t}:n},l("Union Operation"),function(n,t){return{type:"compound",variant:n,statement:t}},function(n,t,e,r){return Object.assign({type:"statement",variant:"select"},n,t,e,r)},l("SELECT Results Clause"),function(n,t){return Object.assign({result:t},n)},l("SELECT Results Modifier"),function(n){return{distinct:!0}},function(n){return{}},l("FROM Clause"),function(n,t){return{from:t}},l("WHERE Clause"),function(n,t){return{where:_(t)}},l("GROUP BY Clause"),function(n,t,e){return Object.assign({group:t},e)},l("HAVING Clause"),function(n,t){return{having:t}},function(n,t){return{type:"identifier",variant:"star",name:d([n,t])}},function(n,t){return d([n,t])},function(n,t){return Object.assign(n,t)},function(n,t){return O(t)?{type:"map",variant:"join",source:n,map:t}:n},function(n,t){return Object.assign(n,t)},l("CROSS JOIN Operation"),function(n){return{type:"join",variant:"cross join",source:n}},l("JOIN Operation"),function(n,t){return{type:"join",variant:A(n),source:t}},function(n,t,e){return Object.assign({type:"function",variant:"table",name:n,args:t},e)},l("Qualified Table"),function(n,t){return Object.assign(n,t)},l("Qualified Table Identifier"),function(n,t){return Object.assign(n,t)},l("Qualfied Table Index"),function(n,t){return{index:t}},function(n,t){return{index:y([n,t])}},l("SELECT Source"),function(n,t){return Object.assign(n,t)},l("Subquery"),function(n,t){return Object.assign(n,t)},l("Alias"),function(n,t){return{alias:t}},l("JOIN Operator"),function(n,t,e){return y([n,t,e])},function(n,t){return y([n,t])},function(n){return A(n)},l("JOIN Constraint"),function(n){return{constraint:Object.assign({type:"constraint",variant:"join"},n)}},l("Join ON Clause"),function(n,t){return{format:A(n),on:t}},l("Join USING Clause"),function(n,t){return{format:A(n),using:t}},l("VALUES Clause"),function(n,t){return{type:"statement",variant:"select",result:t}},function(n,t){return{result:T([n,t])}},function(n){return n},l("Ordering Expression"),function(n,t){return m(t)?Object.assign({type:"expression",variant:"order",expression:n},t):n},l("Star"),l("Fallback Type"),l("INSERT Statement"),function(n,t){return Object.assign({type:"statement",variant:"insert"},n,t)},l("INSERT Keyword"),function(n,t){return Object.assign({action:A(n)},t)},l("REPLACE Keyword"),function(n){return{action:A(n)}},l("INSERT OR Modifier"),function(n,t){return{or:A(t)}},function(n,t){return Object.assign({into:n},t)},l("INTO Clause"),function(n,t){return t},l("INTO Keyword"),function(n){return{result:n}},l("Column List"),function(n,t){return{columns:T([n,t])}},function(n){return n},l("Column Name"),function(n){return{type:"identifier",variant:"column",name:n}},function(n,t){return t},l("VALUES Keyword"),function(n,t){return T([n,t])},l("Wrapped Expression List"),function(n){return n},l("DEFAULT VALUES Clause"),function(n,t){return{type:"values",variant:"default"}},l("Compound Operator"),l("UNION Operator"),function(n,t){return y([n,t])},function(n){return n},l("UPDATE Statement"),function(n,t,e,r,i,a,u){return Object.assign({type:"statement",variant:n,into:e},t,r,i,a,u)},l("UPDATE Keyword"),l("UPDATE OR Modifier"),function(n){return{or:A(n)}},l("SET Clause"),function(n){return{set:n}},l("Column Assignment"),function(n,t){return{type:"assignment",target:n,value:t}},l("DELETE Statement"),function(n,t,e,r,i){return Object.assign({type:"statement",variant:n,from:t},e,r,i)},l("DELETE Keyword"),l("CREATE Statement"),l("CREATE TABLE Statement"),function(n,t,e,r){return Object.assign({type:"statement",name:e},n,r,t)},function(n,t,e){return Object.assign({variant:n,format:A(e)},t)},function(n){return{temporary:m(n)}},l("IF NOT EXISTS Modifier"),function(n,t,e){return{condition:_({type:"condition",variant:A(n),condition:{type:"expression",variant:A(e),operator:y([t,e])}})}},l("Table Definition"),function(n,t,e){return Object.assign({definition:T([n,t])},e)},function(n,t){return{optimization:[{type:"optimization",value:y([n,t])}]}},function(n){return n},l("Column Definition"),function(n,t,e){return Object.assign({type:"definition",variant:"column",name:n,definition:m(e)?e:[]},t)},l("Column Datatype"),function(n){return{datatype:n}},l("Column Constraint"),function(n,t,e){return Object.assign(t,n)},function(n){return n[n.length-1]},l("CONSTRAINT Name"),function(n){return{name:n}},l("FOREIGN KEY Column Constraint"),function(n){return Object.assign({variant:"foreign key"},n)},l("PRIMARY KEY Column Constraint"),function(n,t,e,r){return Object.assign(n,e,t,r)},l("PRIMARY KEY Keyword"),function(n,t){return{type:"constraint",variant:y([n,t])}},l("AUTOINCREMENT Keyword"),function(n){return{autoIncrement:!0}},function(n,t){return Object.assign({type:"constraint",variant:n},t)},l("UNIQUE Column Constraint"),l("NULL Column Constraint"),function(n,t){return y([n,t])},l("CHECK Column Constraint"),l("DEFAULT Column Constraint"),function(n,t){return{type:"constraint",variant:A(n),value:t}},l("COLLATE Column Constraint"),function(n){return{type:"constraint",variant:"collate",collate:n}},l("Table Constraint"),function(n,t,e){return Object.assign({type:"definition",variant:"constraint"},t,n)},l("CHECK Table Constraint"),function(n){return{definition:_(n)}},l("PRIMARY KEY Table Constraint"),function(n,t,e){return{definition:_(Object.assign(n,e,t[1])),columns:t[0]}},function(n){return{type:"constraint",variant:A(n)}},function(n,t){return y([n,t])},l("UNIQUE Keyword"),function(n){return A(n)},function(n,t){return[n].concat(t)},function(n){return n.map(function(n){return u(n,1)[0]})},function(n){var t=n.find(function(n){var t=u(n,2);t[0];return m(t[1])});return[n.map(function(n){var t=u(n,2),e=t[0];t[1];return e}),t?t[1]:null]},l("Indexed Column"),function(n,t,e){var r=n;return m(t)&&(r=Object.assign({type:"expression",variant:"order",expression:n},t)),[r,e]},l("Collation"),function(n){return{collate:_(n)}},l("Column Direction"),function(n){return{direction:A(n)}},function(n,t){return{conflict:A(t)}},l("ON CONFLICT Keyword"),function(n,t){return y([n,t])},function(n,t){return{type:"constraint",variant:A(n),expression:t}},l("FOREIGN KEY Table Constraint"),function(n,t,e){return Object.assign({definition:_(Object.assign(n,e))},t)},l("FOREIGN KEY Keyword"),function(n,t){return{type:"constraint",variant:y([n,t])}},function(n,t,e){return Object.assign({type:"constraint"},n,t,e)},l("REFERENCES Clause"),function(n,t){return{references:t}},function(n,t){return{action:T([n,t])}},l("FOREIGN KEY Action Clause"),function(n,t,e){return{type:"action",variant:A(n),action:A(e)}},l("FOREIGN KEY Action"),function(n,t){return y([n,t])},function(n){return A(n)},function(n,t){return y([n,t])},function(n,t){return{type:"action",variant:A(n),action:t}},l("DEFERRABLE Clause"),function(n,t,e){return{defer:y([n,t,e])}},function(n,t){return y([n,t])},function(n){return{definition:_(n)}},l("CREATE INDEX Statement"),function(n,t,e,r,i){return Object.assign({type:"statement",target:e,on:r},n,t,i)},function(n,t,e){return Object.assign({variant:A(n),format:A(e)},t)},function(n){return{unique:!0}},l("ON Clause"),function(n,t,e){return{type:"identifier",variant:"expression",format:"table",name:t.name,columns:e}},l("CREATE TRIGGER Statement"),function(n,t,e,r,i,a,u,l){return Object.assign({type:"statement",target:e,on:i,event:r,by:m(a)?a:"row",action:_(l)},n,t,u)},function(n,t,e){return Object.assign({variant:A(n),format:A(e)},t)},l("Conditional Clause"),function(n,t){return Object.assign({type:"event"},n,t)},function(n){return{occurs:A(n)}},function(n,t){return y([n,t])},l("Conditional Action"),function(n){return{event:A(n)}},function(n,t){return{event:A(n),of:t}},function(n,t){return t},"statement",e("STATEMENT",!0),function(n,t,e){return A(e)},function(n,t){return{when:t}},l("Actions Clause"),function(n,t,e){return t},function(n){return n},l("CREATE VIEW Statement"),function(n,t,e,r){return Object.assign({type:"statement",target:e,result:r},n,t)},function(n,t){return Object.assign({type:"identifier",variant:"expression",format:"view",name:n.name,columns:[]},t)},function(n,t,e){return Object.assign({variant:A(n),format:A(e)},t)},l("CREATE VIRTUAL TABLE Statement"),function(n,t,e,r){return Object.assign({type:"statement",target:e,result:r},n,t)},function(n,t,e){return{variant:A(n),format:A(t)}},function(n,t){return Object.assign({type:"module",variant:"virtual",name:n},t)},l("Module Arguments"),function(n){return{args:{type:"expression",variant:"list",expression:m(n)?n:[]}}},function(n,t){return T([n,t]).filter(function(n){return m(n)})},function(n){return n},l("DROP Statement"),function(n,t){return Object.assign({type:"statement",target:Object.assign(t,{variant:n.format})},n)},l("DROP Keyword"),function(n,t,e){return Object.assign({variant:A(n),format:t,condition:[]},e)},l("DROP Type"),l("IF EXISTS Keyword"),function(n,t){return{condition:[{type:"condition",variant:A(n),condition:{type:"expression",variant:A(t),operator:A(t)}}]}},l("Or"),l("Add"),l("Subtract"),l("Multiply"),l("Divide"),l("Modulo"),l("Shift Left"),l("Shift Right"),l("Logical AND"),l("Logical OR"),l("Less Than"),l("Greater Than"),l("Less Than Or Equal"),l("Greater Than Or Equal"),l("Equal"),l("Not Equal"),l("IS"),function(n,t){return y([n,t])},l("Identifier"),l("Database Identifier"),function(n){return{type:"identifier",variant:"database",name:n}},l("Function Identifier"),function(n,t){return{type:"identifier",variant:"function",name:d([n,t])}},l("Table Identifier"),function(n,t){return{type:"identifier",variant:"table",name:d([n,t])}},function(n,t){return d([n,t])},l("Column Identifier"),function(n,t){return{type:"identifier",variant:"column",name:d([n,t])}},function(){return""},function(n,t){return d([n,t])},l("Collation Identifier"),function(n){return{type:"identifier",variant:"collation",name:n}},l("Savepoint Identifier"),function(n){return{type:"identifier",variant:"savepoint",name:n}},l("Index Identifier"),function(n,t){return{type:"identifier",variant:"index",name:d([n,t])}},l("Trigger Identifier"),function(n,t){return{type:"identifier",variant:"trigger",name:d([n,t])}},l("View Identifier"),function(n,t){return{type:"identifier",variant:"view",name:d([n,t])}},l("Pragma Identifier"),function(n,t){return{type:"identifier",variant:"pragma",name:d([n,t])}},l("CTE Identifier"),function(n){return n},function(n,t){return Object.assign({type:"identifier",variant:"expression",format:"table",name:n.name,columns:[]},t)},l("Table Constraint Identifier"),function(n){return{type:"identifier",variant:"constraint",format:"table",name:n}},l("Column Constraint Identifier"),function(n){return{type:"identifier",variant:"constraint",format:"column",name:n}},l("Datatype Name"),function(n){return[n,"text"]},function(n){return[n,"real"]},function(n){return[n,"numeric"]},function(n){return[n,"integer"]},function(n){return[n,"none"]},l("TEXT Datatype Name"),"n",e("N",!0),"var",e("VAR",!0),"char",e("CHAR",!0),"tiny",e("TINY",!0),"medium",e("MEDIUM",!0),"long",e("LONG",!0),"text",e("TEXT",!0),"clob",e("CLOB",!0),l("REAL Datatype Name"),"float",e("FLOAT",!0),"real",e("REAL",!0),l("DOUBLE Datatype Name"),"double",e("DOUBLE",!0),"precision",e("PRECISION",!0),function(n,t){return d([n,t])},l("NUMERIC Datatype Name"),"numeric",e("NUMERIC",!0),"decimal",e("DECIMAL",!0),"boolean",e("BOOLEAN",!0),"date",e("DATE",!0),"time",e("TIME",!0),"stamp",e("STAMP",!0),"string",e("STRING",!0),l("INTEGER Datatype Name"),"int",e("INT",!0),"2",e("2",!1),"4",e("4",!1),"8",e("8",!1),"eger",e("EGER",!0),"big",e("BIG",!0),"small",e("SMALL",!0),"floating",e("FLOATING",!0),"point",e("POINT",!0),function(n,t){return d([n,t])},l("BLOB Datatype Name"),"blob",e("BLOB",!0),/^[a-z0-9$_]/i,a([["a","z"],["0","9"],"$","_"],!1,!0),"\\u",e("\\u",!1),/^[a-f0-9]/i,a([["a","f"],["0","9"]],!1,!0),function(n,t){return d([n,t]).toLowerCase()},function(n){return A(n)},function(){return{type:"any"}}(),function(n){return b(n)},/^[ \t]/,a([" ","\t"],!1,!1),'"',e('"',!1),'""',e('""',!1),/^[^"]/,a(['"'],!0,!1),function(n){return g(n,'"')},"'",e("'",!1),function(n){return g(n,"'")},"`",e("`",!1),"``",e("``",!1),/^[^`]/,a(["`"],!0,!1),function(n){return g(n,"`")},l("Open Bracket"),"[",e("[",!1),l("Close Bracket"),"]",e("]",!1),l("Open Parenthesis"),"(",e("(",!1),l("Close Parenthesis"),")",e(")",!1),l("Comma"),",",e(",",!1),l("Period"),".",e(".",!1),l("Asterisk"),"*",e("*",!1),l("Question Mark"),"?",e("?",!1),l("Single Quote"),l("Double Quote"),l("Backtick"),l("Tilde"),"~",e("~",!1),l("Plus"),"+",e("+",!1),l("Minus"),"-",e("-",!1),"=",e("=",!1),l("Ampersand"),"&",e("&",!1),l("Pipe"),"|",e("|",!1),"%",e("%",!1),"<",e("<",!1),">",e(">",!1),l("Exclamation"),"!",e("!",!1),l("Semicolon"),";",e(";",!1),l("Colon"),l("Forward Slash"),"/",e("/",!1),l("Backslash"),"\\",e("\\",!1),"abort",e("ABORT",!0),"action",e("ACTION",!0),"add",e("ADD",!0),"after",e("AFTER",!0),"all",e("ALL",!0),"alter",e("ALTER",!0),"analyze",e("ANALYZE",!0),"and",e("AND",!0),"as",e("AS",!0),"asc",e("ASC",!0),"attach",e("ATTACH",!0),"autoincrement",e("AUTOINCREMENT",!0),"before",e("BEFORE",!0),"begin",e("BEGIN",!0),"between",e("BETWEEN",!0),"by",e("BY",!0),"cascade",e("CASCADE",!0),"case",e("CASE",!0),"cast",e("CAST",!0),"check",e("CHECK",!0),"collate",e("COLLATE",!0),"column",e("COLUMN",!0),"commit",e("COMMIT",!0),"conflict",e("CONFLICT",!0),"constraint",e("CONSTRAINT",!0),"create",e("CREATE",!0),"cross",e("CROSS",!0),"current_date",e("CURRENT_DATE",!0),"current_time",e("CURRENT_TIME",!0),"current_timestamp",e("CURRENT_TIMESTAMP",!0),"database",e("DATABASE",!0),"default",e("DEFAULT",!0),"deferrable",e("DEFERRABLE",!0),"deferred",e("DEFERRED",!0),"delete",e("DELETE",!0),"desc",e("DESC",!0),"detach",e("DETACH",!0),"distinct",e("DISTINCT",!0),"drop",e("DROP",!0),"each",e("EACH",!0),"else",e("ELSE",!0),"end",e("END",!0),"escape",e("ESCAPE",!0),"except",e("EXCEPT",!0),"exclusive",e("EXCLUSIVE",!0),"exists",e("EXISTS",!0),"explain",e("EXPLAIN",!0),"fail",e("FAIL",!0),"for",e("FOR",!0),"foreign",e("FOREIGN",!0),"from",e("FROM",!0),"full",e("FULL",!0),"glob",e("GLOB",!0),"group",e("GROUP",!0),"having",e("HAVING",!0),"if",e("IF",!0),"ignore",e("IGNORE",!0),"immediate",e("IMMEDIATE",!0),"in",e("IN",!0),"index",e("INDEX",!0),"indexed",e("INDEXED",!0),"initially",e("INITIALLY",!0),"inner",e("INNER",!0),"insert",e("INSERT",!0),"instead",e("INSTEAD",!0),"intersect",e("INTERSECT",!0),"into",e("INTO",!0),"is",e("IS",!0),"isnull",e("ISNULL",!0),"join",e("JOIN",!0),"key",e("KEY",!0),"left",e("LEFT",!0),"like",e("LIKE",!0),"limit",e("LIMIT",!0),"match",e("MATCH",!0),"natural",e("NATURAL",!0),"no",e("NO",!0),"not",e("NOT",!0),"notnull",e("NOTNULL",!0),"of",e("OF",!0),"offset",e("OFFSET",!0),"on",e("ON",!0),"or",e("OR",!0),"order",e("ORDER",!0),"outer",e("OUTER",!0),"plan",e("PLAN",!0),"pragma",e("PRAGMA",!0),"primary",e("PRIMARY",!0),"query",e("QUERY",!0),"raise",e("RAISE",!0),"recursive",e("RECURSIVE",!0),"references",e("REFERENCES",!0),"regexp",e("REGEXP",!0),"reindex",e("REINDEX",!0),"release",e("RELEASE",!0),"rename",e("RENAME",!0),"replace",e("REPLACE",!0),"restrict",e("RESTRICT",!0),"right",e("RIGHT",!0),"rollback",e("ROLLBACK",!0),"row",e("ROW",!0),"rowid",e("ROWID",!0),"savepoint",e("SAVEPOINT",!0),"select",e("SELECT",!0),"set",e("SET",!0),"table",e("TABLE",!0),"temp",e("TEMP",!0),"temporary",e("TEMPORARY",!0),"then",e("THEN",!0),"to",e("TO",!0),"transaction",e("TRANSACTION",!0),"trigger",e("TRIGGER",!0),"union",e("UNION",!0),"unique",e("UNIQUE",!0),"update",e("UPDATE",!0),"using",e("USING",!0),"vacuum",e("VACUUM",!0),"values",e("VALUES",!0),"view",e("VIEW",!0),"virtual",e("VIRTUAL",!0),"when",e("WHEN",!0),"where",e("WHERE",!0),"with",e("WITH",!0),"without",e("WITHOUT",!0),function(n){return A(n)},function(){return null
},l("Line Comment"),"--",e("--",!1),/^[\n\v\f\r]/,a(["\n","\v","\f","\r"],!1,!1),l("Block Comment"),"/*",e("/*",!1),"*/",e("*/",!1),/^[\n\v\f\r\t ]/,a(["\n","\v","\f","\r","\t"," "],!1,!1),l("Whitespace"),"__TODO__",e("__TODO__",!1)],L=[f("%;ȿ/H#;#/?$;\".\" &\"/1$;#/($8$: $!!)($'#(#'#(\"'#&'#"),f("%;ȿ/C#;#/:$;x/1$;#/($8$: $!!)($'#(#'#(\"'#&'#"),f("%;x/B#;ȿ/9$$;%0#*;%&/)$8#:!#\"\" )(#'#(\"'#&'#"),f("$;Ƴ0#*;Ƴ&"),f("$;Ƴ/&#0#*;Ƴ&&&#"),f("%;$/:#;x/1$;ȿ/($8#:\"#!!)(#'#(\"'#&'#"),f('<%;\'.# &;(/@#;ȿ/7$;*." &"/)$8#:$#"" )(#\'#("\'#&\'#=." 7#'),f("%;Ƌ/' 8!:%!! )"),f('<%;ƕ/9#$;)0#*;)&/)$8":\'""! )("\'#&\'#=." 7&'),f('%4(""5!7)/1#;Ɨ/($8":*"! )("\'#&\'#'),f("<%;Ơ/R#;5/I$;ȿ/@$;+.\" &\"/2$;ơ/)$8%:,%\"#!)(%'#($'#(#'#(\"'#&'#=.\" 7+"),f("%;Ƣ/C#;ȿ/:$;5/1$;ȿ/($8$:-$!!)($'#(#'#(\"'#&'#"),f(";5.; &;6.5 &;2./ &;-.) &;..# &;/"),f('<%;Ȇ/1#;ȿ/($8":/"!!)("\'#&\'#=." 7.'),f('<%;ǒ.) &;ǔ.# &;Ǔ/1#;ȿ/($8":1"!!)("\'#&\'#=." 70'),f('<%;4." &"/2#;0/)$8":3""! )("\'#&\'#=." 72'),f("<%;Ʀ/A#$;10#*;1&/1$;Ʀ/($8#:5#!!)(#'#(\"'#&'#=.\" 74"),f('26""6677.) &48""5!79'),f('<%4;""5!7</1#;0/($8":="! )("\'#&\'#=." 7:'),f("%;Ɨ.# &;ƛ/' 8!:>!! )"),f('<%;ƪ.# &;ƫ/\' 8!:"!! )=." 7?'),f('%;4." &"/2#;6/)$8":@""! )("\'#&\'#'),f(";<.# &;7"),f('%;8/7#;;." &"/)$8":A""! )("\'#&\'#'),f('<;9.# &;:=." 7B'),f('%$;>/&#0#*;>&&&#/7#;:." &"/)$8":C""! )("\'#&\'#'),f('%;ƣ/9#$;>0#*;>&/)$8":D""! )("\'#&\'#'),f('<%3F""5!7G/T#4H""5!7I." &"/@$$;>/&#0#*;>&&&#/*$8#:J##"! )(#\'#("\'#&\'#=." 7E'),f('<%3L""5"7M/?#$;=/&#0#*;=&&&#/)$8":N""! )("\'#&\'#=." 7K'),f('4O""5!7P'),f('4Q""5!7R'),f("<%;@.) &;B.# &;C/' 8!:T!! )=.\" 7S"),f('<%;ƥ/@#;A." &"/2$;ȿ/)$8#:V#""!)(#\'#("\'#&\'#=." 7U'),f('%4W""5!7X/9#$;>0#*;>&/)$8":Y""! )("\'#&\'#'),f('<%4[""5!7\\/H#$;Ɠ/&#0#*;Ɠ&&&#/2$;ȿ/)$8#:]#""!)(#\'#("\'#&\'#=." 7Z'),f('<%2_""6_7`/o#$;Ɠ.) &2a""6a7b/2#0/*;Ɠ.) &2a""6a7b&&&#/A$;ȿ/8$;D." &"/*$8$:c$##" )($\'#(#\'#("\'#&\'#=." 7^'),f('%;ƛ/1#;ȿ/($8":d"!!)("\'#&\'#'),f('<%;F." &"/;#;ȿ/2$;/)$8#:f#"" )(#\'#("\'#&\'#=." 7e'),f('<%;k." &"/;#;Ǥ/2$;ȿ/)$8#:h#""!)(#\'#("\'#&\'#=." 7g'),f("<%;ȑ/_#;ȿ/V$;Ơ/M$;ȿ/D$;H/;$;ȿ/2$;ơ/)$8':j'\"&\")(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7i"),f("<%;I.# &;J/' 8!:l!! )=.\" 7k"),f("<%;ǯ/' 8!:n!! )=.\" 7m"),f("%;ț.) &;Ʒ.# &;Ǧ/M#;ȿ/D$;Ƣ/;$;ȿ/2$;w/)$8%:o%\"$ )(%'#($'#(#'#(\"'#&'#"),f(";?./ &;t.) &;,.# &;Ž"),f("%;Ơ/L#;ȿ/C$;p/:$;ȿ/1$;ơ/($8%:p%!\")(%'#($'#(#'#(\"'#&'#"),f(";L.; &;E.5 &;_./ &;a.) &;G.# &;K"),f("%;M/;#;ȿ/2$;Q/)$8#:q#\"\" )(#'#(\"'#&'#.# &;M"),f("%;P/A#;ȿ/8$;N.# &;p/)$8#:r#\"\" )(#'#(\"'#&'#.# &;N"),f(";Ʃ.U &;ƫ.O &;ƪ.I &%%;k/8#%<;Ǥ=.##&&!&'#/#$+\")(\"'#&'#/\"!&,)"),f("<%;ĭ/' 8!:t!! )=.\" 7s"),f("%;O/#$%;ȿ/>#;Ŧ/5$;ȿ/,$;O/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;Ŧ/5$;ȿ/,$;O/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f("%;R/#$%;ȿ/>#;T/5$;ȿ/,$;R/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;T/5$;ȿ/,$;R/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f(";ũ.) &;Ū.# &;ū"),f("%;S/#$%;ȿ/>#;V/5$;ȿ/,$;S/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;V/5$;ȿ/,$;S/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f(";ŧ.# &;Ũ"),f("%;U/#$%;ȿ/>#;X/5$;ȿ/,$;U/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;X/5$;ȿ/,$;U/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f(";Ŭ.U &;ŭ.O &;Ů.I &%%;ů/8#%<;ů=.##&&!&'#/#$+\")(\"'#&'#/\"!&,)"),f("%;W/#$%;ȿ/>#;Z/5$;ȿ/,$;W/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;Z/5$;ȿ/,$;W/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f(";Ų.{ &;ų.u &%%;Ű/8#%<;X=.##&&!&'#/#$+\")(\"'#&'#/\"!&,).I &%%;ű/8#%<;X=.##&&!&'#/#$+\")(\"'#&'#/\"!&,)"),f('%;Y/9#$;\\0#*;\\&/)$8":u""! )("\'#&\'#'),f("%;ȿ/1#;]/($8\":v\"! )(\"'#&'#.H &%;ȿ/>#;^/5$;ȿ/,$;Y/#$+$)($'#(#'#(\"'#&'#"),f('%3w""5$7x/?#;ȿ/6$3y""5$7z/\'$8#:{# )(#\'#("\'#&\'#.? &%;ǻ/& 8!:|! ).. &%;ȅ/& 8!:{! )'),f(";ŷ./ &;ŵ.) &;Ŷ.# &;Ŵ"),f("<%;ǉ/i#;ȿ/`$;Ơ/W$;p/N$;ȿ/E$;`/<$;ȿ/3$;ơ/*$8(:~(#'$\")(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7}"),f("<%;ƿ/:#;ȿ/1$;&/($8#:#! )(#'#(\"'#&'#=.\" 7"),f("<%;ǈ/#;ȿ/$;b.\" &\"/|$;ȿ/s$$;c/&#0#*;c&&&#/]$;ȿ/T$;d.\" &\"/F$;ȿ/=$;Ǡ/4$;ȿ/+$8*:*$)'%#)(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7"),f("%%<;Ȱ=.##&&!&'#/1#;p/($8\":\"! )(\"'#&'#"),f("<%;Ȱ/i#;ȿ/`$;p/W$;ȿ/N$;Ȥ/E$;ȿ/<$;p/3$;ȿ/*$8(:(#'%!)(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7"),f("<%;ǟ/D#;ȿ/;$;p/2$;ȿ/)$8$:$\"#!)($'#(#'#(\"'#&'#=.\" 7"),f("%;[/;#;ȿ/2$;f/)$8#:#\"\" )(#'#(\"'#&'#.# &;["),f(";l.) &;i.# &;g"),f('<%;k." &"/o#;ǿ./ &;ǫ.) &;Ȕ.# &;ȁ/T$;ȿ/K$;p/B$;ȿ/9$;h." &"/+$8&:&$%$" )(&\'#(%\'#($\'#(#\'#("\'#&\'#=." 7'),f("<%;ǡ/D#;ȿ/;$;p/2$;ȿ/)$8$:$\"#!)($'#(#'#(\"'#&'#=.\" 7"),f('<%;k." &"/E#;ǅ/<$;ȿ/3$;j/*$8$:$##" )($\'#(#\'#("\'#&\'#=." 7'),f("%;e/W#%;ȿ/>#;ƾ/5$;ȿ/,$;e/#$+$)($'#(#'#(\"'#&'#/)$8\":\"\"! )(\"'#&'#"),f('%;Ȅ/1#;ȿ/($8":"!!)("\'#&\'#'),f('<%;k." &"/E#;Ǳ/<$;ȿ/3$;m/*$8$:$##" )($\'#(#\'#("\'#&\'#=." 7'),f(";n.# &;Ż"),f("%;Ơ/I#;.# &;q/:$;ȿ/1$;ơ/($8$:$!\")($'#(#'#(\"'#&'#"),f("%;e/#$%;ȿ/>#;ƾ/5$;ȿ/,$;e/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;ƾ/5$;ȿ/,$;e/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f("%;o/#$%;ȿ/>#;Ȋ/5$;ȿ/,$;o/#$+$)($'#(#'#(\"'#&'#0H*%;ȿ/>#;Ȋ/5$;ȿ/,$;o/#$+$)($'#(#'#(\"'#&'#&/)$8\":u\"\"! )(\"'#&'#"),f('<%;r." &"/1#;ȿ/($8":"!!)("\'#&\'#=." 7'),f("%;p/B#;ȿ/9$$;s0#*;s&/)$8#:#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;p/1$;ȿ/($8#:#!!)(#'#(\"'#&'#"),f("<%;ź/[#;ȿ/R$;Ơ/I$;u.\" &\"/;$;ȿ/2$;ơ/)$8&:&\"%\")(&'#(%'#($'#(#'#(\"'#&'#=.\" 7"),f('<%;Û/\' 8!:!! ).V &%;v." &"/G#;q/>$9: "! -""&!&#/)$8#:#""!)(#\'#("\'#&\'#=." 7'),f('%;ǜ.# &;ƻ/1#;ȿ/($8":"!!)("\'#&\'#'),f("<%;//' 8!:!! )=.\" 7"),f('<%;y." &"/;#;{/2$;ȿ/)$8#:¡#""!)(#\'#("\'#&\'#=." 7 '),f('<%;ǥ/@#;ȿ/7$;z." &"/)$8#:£#"" )(#\'#("\'#&\'#=." 7¢'),f("<%;Ȑ/D#;ȿ/;$;ȍ/2$;ȿ/)$8$:¥$\"#!)($'#(#'#(\"'#&'#=.\" 7¤"),f(";.S &;û.M &;Ţ.G &;}.A &;|.; &;.5 &;./ &;.) &;.# &;"),f('<%;Ǎ.# &;Ǡ/@#;ȿ/7$;~." &"/)$8#:§#"" )(#\'#("\'#&\'#=." 7¦'),f('<%;Ǆ/^#;ȿ/U$;." &"/G$;~." &"/9$;." &"/+$8%:©%$$"! )(%\'#($\'#(#\'#("\'#&\'#=." 7¨'),f('%;Ȧ/1#;ȿ/($8":ª"!!)("\'#&\'#'),f('%;ǘ.) &;ǰ.# &;ǣ/1#;ȿ/($8":«"!!)("\'#&\'#'),f('<%;ț/N#;ȿ/E$;~." &"/7$;." &"/)$8$:­$"# )($\'#(#\'#("\'#&\'#=." 7¬'),f('<%%;ȥ/,#;ȿ/#$+")("\'#&\'#." &"/?#;." &"/1$;/($8#:p#! )(#\'#("\'#&\'#=." 7®'),f('%;Ƃ/1#;ȿ/($8":¯"!!)("\'#&\'#'),f('%;Ȟ/1#;ȿ/($8":°"!!)("\'#&\'#'),f('<%;/2#;/)$8":²""! )("\'#&\'#=." 7±'),f("<%;Ȗ/J#;ȿ/A$;.\" &\"/3$;/*$8$:´$##! )($'#(#'#(\"'#&'#=.\" 7³"),f("<%;/N#;Ż/E$;ȿ/<$;/3$;ȿ/*$8%:¶%#$#!)(%'#($'#(#'#(\"'#&'#=.\" 7µ"),f("<%;Ƽ/D#;ȿ/;$;ȡ/2$;ȿ/)$8$:¸$\"#!)($'#(#'#(\"'#&'#=.\" 7·"),f(";.# &;"),f("<%;ȗ/M#;ȿ/D$;ȥ/;$;ȿ/2$;Ż/)$8%:º%\"$ )(%'#($'#(#'#(\"'#&'#=.\" 7¹"),f('<%;ƹ/I#;ȿ/@$;." &"/2$;Č/)$8$:¼$"# )($\'#(#\'#("\'#&\'#=." 7»'),f('%;ǌ/1#;ȿ/($8":°"!!)("\'#&\'#'),f('%;/2#;§/)$8":½""! )("\'#&\'#'),f('<%;." &"/1#;ȿ/($8":*"!!)("\'#&\'#=." 7¾'),f("%;Ȳ/J#;ȿ/A$;.\" &\"/3$;/*$8$:¿$##! )($'#(#'#(\"'#&'#"),f('%;Ȓ/1#;ȿ/($8":°"!!)("\'#&\'#'),f("%;/B#;ȿ/9$$;0#*;&/)$8#:À#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;/1$;ȿ/($8#:#!!)(#'#(\"'#&'#"),f('<%;Ƈ/2#;/)$8":Â""! )("\'#&\'#=." 7Á'),f("%;ƿ/:#;ȿ/1$;/($8#:Ã#! )(#'#(\"'#&'#"),f("%;Ơ/C#;/:$;ȿ/1$;ơ/($8$: $!\")($'#(#'#(\"'#&'#"),f('%;/2#;¨/)$8":Ä""! )("\'#&\'#'),f(";.; &;.5 &;./ &;.) &;.# &; "),f("<%;ǁ/#;ȿ/$%;Ǖ/,#;ȿ/#$+\")(\"'#&'#.\" &\"/a$;p/X$;ȿ/O$;ƿ/F$;ȿ/=$;/4$;ȿ/+$8):Æ)$(&%!)()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Å"),f(";Ź.) &;-.# &;?"),f("<%;Ǜ/f#;ȿ/]$%;Ǖ/,#;ȿ/#$+\")(\"'#&'#.\" &\"/<$;/3$;ȿ/*$8%:È%#$\"!)(%'#($'#(#'#(\"'#&'#=.\" 7Ç"),f('<%;Ȭ/@#;ȿ/7$;." &"/)$8#:Ê#"" )(#\'#("\'#&\'#=." 7É'),f('%;Ź/1#;ȿ/($8":Ë"!!)("\'#&\'#'),f('<%;ƽ/@#;ȿ/7$;." &"/)$8#:Í#"" )(#\'#("\'#&\'#=." 7Ì'),f('%;Ż.) &;ƃ.# &;Ź/1#;ȿ/($8":Î"!!)("\'#&\'#'),f('<%;ȕ/I#;ȿ/@$;." &"/2$;ȿ/)$8$:Í$"#!)($\'#(#\'#("\'#&\'#=." 7Ï'),f('%;Ż.) &;ƃ.# &;Ɓ/1#;ȿ/($8":Ð"!!)("\'#&\'#'),f("<%;Ȏ/S#;ȿ/J$;Ɔ/A$;ȿ/8$;¡.\" &\"/*$8%:Ò%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ñ"),f("%;Ơ/C#;¢/:$;ȿ/1$;ơ/($8$:Ó$!\")($'#(#'#(\"'#&'#.D &%;Ƭ/:#;¢/1$;ȿ/($8#:Ó#!!)(#'#(\"'#&'#"),f(";¤.) &;£.# &;¦"),f(";5.) &;/.# &;3"),f('%;¥/<#9:Ô ! -""&!&#/($8":Õ"!!)("\'#&\'#'),f("%$;Ɠ/&#0#*;Ɠ&&&#/' 8!:Ö!! )"),f("%;¥/' 8!:×!! )"),f(";¨./ &;Ý.) &;ò.# &;ù"),f('<%;®/X#;ȿ/O$;©." &"/A$;ȿ/8$;ª." &"/*$8%:Ù%#$" )(%\'#($\'#(#\'#("\'#&\'#=." 7Ø'),f("<%;ȋ/L#;ȿ/C$;ǆ/:$;ȿ/1$;Ø/($8%:Û%! )(%'#($'#(#'#(\"'#&'#=.\" 7Ú"),f("<%;Ȁ/S#;ȿ/J$;p/A$;ȿ/8$;«.\" &\"/*$8%:Ý%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ü"),f('<%;¬/2#;p/)$8":ß""! )("\'#&\'#=." 7Þ'),f(";­.# &;Ƣ"),f('%;Ȉ/1#;ȿ/($8":°"!!)("\'#&\'#'),f("%;°/B#;ȿ/9$$;¯0#*;¯&/)$8#:à#\"\" )(#'#(\"'#&'#"),f("<%;ï/D#;ȿ/;$;°/2$;ȿ/)$8$:â$\"#!)($'#(#'#(\"'#&'#=.\" 7á"),f(";±.# &;×"),f('%;²/U#;¸." &"/G$;¹." &"/9$;º." &"/+$8$:ã$$#"! )($\'#(#\'#("\'#&\'#'),f('<%;ȟ/R#;ȿ/I$;³." &"/;$;ȿ/2$;¶/)$8%:å%"" )(%\'#($\'#(#\'#("\'#&\'#=." 7ä'),f('<;´.# &;µ=." 7æ'),f('%;ǜ/1#;ȿ/($8":ç"!!)("\'#&\'#'),f('%;ƻ/1#;ȿ/($8":è"!!)("\'#&\'#'),f("%;¼/B#;ȿ/9$$;·0#*;·&/)$8#:À#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;¼/1$;ȿ/($8#:-#!!)(#'#(\"'#&'#"),f("<%;ǩ/D#;ȿ/;$;À/2$;ȿ/)$8$:ê$\"#!)($'#(#'#(\"'#&'#=.\" 7é"),f("<%;ȱ/D#;ȿ/;$;p/2$;ȿ/)$8$:ì$\"#!)($'#(#'#(\"'#&'#=.\" 7ë"),f("<%;Ǭ/e#;ȿ/\\$;ǆ/S$;ȿ/J$;q/A$;ȿ/8$;».\" &\"/*$8':î'#&\" )(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7í"),f("<%;ǭ/D#;ȿ/;$;p/2$;ȿ/)$8$:ð$\"#!)($'#(#'#(\"'#&'#=.\" 7ï"),f(";½.# &;¿"),f('%;¾." &"/2#;Û/)$8":ñ""! )("\'#&\'#'),f('%;ƕ/2#;ƣ/)$8":ò""! )("\'#&\'#'),f('%;p/@#;ȿ/7$;Í." &"/)$8#:ó#"" )(#\'#("\'#&\'#'),f("%;Ä/B#;ȿ/9$$;Á0#*;Á&/)$8#:ô#\"\" )(#'#(\"'#&'#"),f('%;Â.# &;Ã/7#;Ô." &"/)$8":õ""! )("\'#&\'#'),f("<%;Ƣ/:#;Ä/1$;ȿ/($8#:÷#!!)(#'#(\"'#&'#=.\" 7ö"),f("<%;Î/D#;ȿ/;$;Ä/2$;ȿ/)$8$:ù$\"#!)($'#(#'#(\"'#&'#=.\" 7ø"),f(";Ë.5 &;?./ &;Å.) &;Æ.# &;Ì"),f("%;ź/S#;ȿ/J$;í/A$;ȿ/8$;Í.\" &\"/*$8%:ú%#$\" )(%'#($'#(#'#(\"'#&'#"),f('<%;Ç/@#;ȿ/7$;È." &"/)$8#:ü#"" )(#\'#("\'#&\'#=." 7û'),f('<%;Ż/@#;ȿ/7$;Í." &"/)$8#:þ#"" )(#\'#("\'#&\'#=." 7ý'),f('<;É.# &;Ê=." 7ÿ'),f("%;ǳ/V#;ȿ/M$;ǆ/D$;ȿ/;$;ƃ/2$;ȿ/)$8&:Ā&\"%!)(&'#(%'#($'#(#'#(\"'#&'#"),f("%;k/;#;ǳ/2$;ȿ/)$8#:ā#\"\"!)(#'#(\"'#&'#"),f("<%;Ơ/R#;À/I$;ȿ/@$;ơ/7$;Í.\" &\"/)$8%:ă%\"# )(%'#($'#(#'#(\"'#&'#=.\" 7Ă"),f('<%;/7#;Í." &"/)$8":ą""! )("\'#&\'#=." 7Ą'),f('<%%;ƿ/Q#%%<;Ɠ.# &;ȶ=.##&&!&\'#/,#;ȿ/#$+")("\'#&\'#/#$+")("\'#&\'#." &"/;#;ƕ/2$;ȿ/)$8#:ć#""!)(#\'#("\'#&\'#=." 7Ć'),f('<%;Ï." &"/J#;ȿ/A$;Ð." &"/3$;Ǽ/*$8$:ĉ$##! )($\'#(#\'#("\'#&\'#=." 7Ĉ'),f('%;Ȃ/1#;ȿ/($8":"!!)("\'#&\'#'),f(";Ñ.# &;Ó"),f('%;Ǿ.) &;Ț.# &;Ǫ/@#;ȿ/7$;Ò." &"/)$8#:Ċ#"" )(#\'#("\'#&\'#'),f('%;Ȍ/1#;ȿ/($8":ċ"!!)("\'#&\'#'),f('%;ǵ.# &;Ǒ/1#;ȿ/($8":ċ"!!)("\'#&\'#'),f('<%;Õ.# &;Ö/1#;ȿ/($8":č"!!)("\'#&\'#=." 7Č'),f('<%;ȉ/;#;ȿ/2$;p/)$8#:ď#"" )(#\'#("\'#&\'#=." 7Ď'),f('<%;ȫ/;#;ȿ/2$;æ/)$8#:đ#"" )(#\'#("\'#&\'#=." 7Đ'),f('<%;ȭ/;#;ȿ/2$;ë/)$8#:ē#"" )(#\'#("\'#&\'#=." 7Ē'),f("%;Ú/B#;ȿ/9$$;Ù0#*;Ù&/)$8#:Ĕ#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;Ú/1$;ȿ/($8#:ĕ#!!)(#'#(\"'#&'#"),f('<%;p/@#;ȿ/7$;į." &"/)$8#:ė#"" )(#\'#("\'#&\'#=." 7Ė'),f('<;Ƥ=." 7Ę'),f('<;Ș.5 &;ț./ &;Ʒ.) &;Ǧ.# &;ǯ=." 7ę'),f('<%;Þ/;#;ȿ/2$;â/)$8#:ě#"" )(#\'#("\'#&\'#=." 7Ě'),f(";ß.# &;à"),f('<%;Ƕ/@#;ȿ/7$;á." &"/)$8#:ĝ#"" )(#\'#("\'#&\'#=." 7Ĝ'),f('<%;Ș/1#;ȿ/($8":ğ"!!)("\'#&\'#=." 7Ğ'),f('<%;Ȋ/;#;ȿ/2$;Ü/)$8#:ġ#"" )(#\'#("\'#&\'#=." 7Ġ'),f('%;ã/2#;å/)$8":Ģ""! )("\'#&\'#'),f('<%;ä/2#;Ƈ/)$8":Ĥ""! )("\'#&\'#=." 7ģ'),f('<%;ǹ/,#;ȿ/#$+")("\'#&\'#=." 7ĥ'),f('<%;é.) &;.# &;î/1#;ȿ/($8":Ħ"!!)("\'#&\'#=." 7Ē'),f("<%;Ơ/T#;è/K$;ȿ/B$$;ç0#*;ç&/2$;ơ/)$8%:Ĩ%\"#!)(%'#($'#(#'#(\"'#&'#=.\" 7ħ"),f("%;Ƣ/:#;è/1$;ȿ/($8#:ĩ#!!)(#'#(\"'#&'#"),f("<%;Ÿ/' 8!:ī!! )=.\" 7Ī"),f('<%;ê/2#;ë/)$8":Ĭ""! )("\'#&\'#=." 7Ē'),f('<%;ȭ/1#;ȿ/($8":°"!!)("\'#&\'#=." 7ĭ'),f("%;í/B#;ȿ/9$$;ì0#*;ì&/)$8#:Į#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;í/1$;ȿ/($8#:#!!)(#'#(\"'#&'#"),f("<%;Ơ/C#;q/:$;ȿ/1$;ơ/($8$:İ$!\")($'#(#'#(\"'#&'#=.\" 7į"),f('<%;ǖ/;#;ȿ/2$;ȭ/)$8#:Ĳ#"" )(#\'#("\'#&\'#=." 7ı'),f("<%;ð.) &;Ǹ.# &;Ǣ/' 8!:°!! )=.\" 7ĳ"),f('<%;Ȩ/@#;ȿ/7$;ñ." &"/)$8#:ĵ#"" )(#\'#("\'#&\'#=." 7Ĵ'),f('%;ƻ/1#;ȿ/($8":Ķ"!!)("\'#&\'#'),f("<%;ó/#;ô.\" &\"/|$;Æ/s$;ȿ/j$;õ/a$;¹.\" &\"/S$;©.\" &\"/E$;ȿ/<$;ª.\" &\"/.$8):ĸ)'('&$#\" )()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7ķ"),f('<%;Ȫ/1#;ȿ/($8":°"!!)("\'#&\'#=." 7Ĺ'),f("<%;Ȋ/C#;ȿ/:$;Ü/1$;ȿ/($8$:Ļ$!!)($'#(#'#(\"'#&'#=.\" 7ĺ"),f("<%;Ƞ/C#;ȿ/:$;ö/1$;ȿ/($8$:Ľ$!!)($'#(#'#(\"'#&'#=.\" 7ļ"),f('%;ø/9#$;÷0#*;÷&/)$8":Į""! )("\'#&\'#'),f("%;ȿ/:#;Ƣ/1$;ø/($8#:ĩ#! )(#'#(\"'#&'#"),f("<%;Ž/M#;ȿ/D$;Ƭ/;$;p/2$;ȿ/)$8%:Ŀ%\"$!)(%'#($'#(#'#(\"'#&'#=.\" 7ľ"),f('<%;ú/h#;Æ/_$;ȿ/V$;¹." &"/H$;©." &"/:$;ª." &"/,$8&:Ł&%%$"! )(&\'#(%\'#($\'#(#\'#("\'#&\'#=." 7ŀ'),f("<%;Ǚ/C#;ȿ/:$;ǩ/1$;ȿ/($8$:°$!#)($'#(#'#(\"'#&'#=.\" 7ł"),f('<;ý.5 &;þ./ &;ÿ.) &;Ā.# &;ā=." 7Ń'),f('%;ǐ/1#;ȿ/($8":°"!!)("\'#&\'#'),f("%%<%;ü/>#;ǲ./ &;ȧ.) &;Ȯ.# &;ȯ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ă/($8\":ĩ\"! )(\"'#&'#"),f("%%<%;ü/>#;ȡ./ &;ȧ.) &;Ȯ.# &;ȯ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ń/($8\":ĩ\"! )(\"'#&'#"),f("%%<%;ü/>#;ȡ./ &;ǲ.) &;Ȯ.# &;ȯ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ň/($8\":ĩ\"! )(\"'#&'#"),f("%%<%;ü/>#;ȡ./ &;ǲ.) &;ȧ.# &;ȯ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ŗ/($8\":ĩ\"! )(\"'#&'#"),f("%%<%;ü/>#;ȡ./ &;ǲ.) &;ȧ.# &;Ȯ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ś/($8\":ĩ\"! )(\"'#&'#"),f("<%;ă/T#;ą.\" &\"/F$;Ż/=$;ȿ/4$;Ć/+$8%:Ņ%$$#\" )(%'#($'#(#'#(\"'#&'#=.\" 7ń"),f("%;ü/J#;Ą.\" &\"/<$;ȡ/3$;ȿ/*$8$:ņ$##\"!)($'#(#'#(\"'#&'#"),f('%;ȣ.# &;Ȣ/1#;ȿ/($8":Ň"!!)("\'#&\'#'),f("<%;Ǯ/N#;ȿ/E$;k/<$;Ǥ/3$;ȿ/*$8%:ŉ%#$\"!)(%'#($'#(#'#(\"'#&'#=.\" 7ň"),f(";ć.# &;ł"),f("<%;Ơ/Z#;ĉ/Q$$;ċ0#*;ċ&/A$;ơ/8$;Ĉ.\" &\"/*$8%:ŋ%##\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ŋ"),f("%;ȳ/D#;ȿ/;$;ȝ/2$;ȿ/)$8$:Ō$\"#!)($'#(#'#(\"'#&'#"),f("%;Č/B#;ȿ/9$$;Ċ0#*;Ċ&/)$8#:Į#\"\" )(#'#(\"'#&'#"),f("%;Ƣ/:#;Č/1$;ȿ/($8#:ª#!!)(#'#(\"'#&'#"),f('%;Ƣ." &"/1#;Ġ/($8":ō"! )("\'#&\'#'),f('<%;č/O#;ȿ/F$;Ď." &"/8$;ď." &"/*$8$:ŏ$##! )($\'#(#\'#("\'#&\'#=." 7Ŏ'),f("%;ƕ/=#%<;ȿ=/##&'!&&#/($8\":p\"!!)(\"'#&'#.\\ &%%<;Ď.) &;đ.# &;Ġ=.##&&!&'#/:#;ȿ/1$;Ƙ/($8#:p#! )(#'#(\"'#&'#"),f('<%;&/1#;ȿ/($8":ő"!!)("\'#&\'#=." 7Ő'),f("%;đ/B#$;Đ0#*;Đ&/2$;ȿ/)$8#:Į#\"\"!)(#'#(\"'#&'#"),f('%;ȿ/1#;đ/($8":ĩ"! )("\'#&\'#'),f('<%;Ē." &"/A#;Ĕ/8$;Ē." &"/*$8#:œ##"! )(#\'#("\'#&\'#=." 7Œ'),f("%$;ē/&#0#*;ē&&&#/' 8!:Ŕ!! )"),f("<%;Ǐ/C#;ȿ/:$;ƕ/1$;ȿ/($8$:Ŗ$!!)($'#(#'#(\"'#&'#=.\" 7ŕ"),f(";Ė.; &;ę.5 &;Ĝ./ &;ĝ.) &;ğ.# &;ĕ"),f("<%;ĵ/' 8!:Ř!! )=.\" 7ŗ"),f('<%;ė/U#;į." &"/G$;İ." &"/9$;Ę." &"/+$8$:Ś$$#"! )($\'#(#\'#("\'#&\'#=." 7ř'),f("<%;ȏ.# &;Ȏ/D#;ȿ/;$;ǽ/2$;ȿ/)$8$:Ŝ$\"#!)($'#(#'#(\"'#&'#=.\" 7ś"),f('<%;ǂ/1#;ȿ/($8":Ş"!!)("\'#&\'#=." 7ŝ'),f('%;Ě/@#;İ." &"/2$;ȿ/)$8#:ş#""!)(#\'#("\'#&\'#'),f('<%;ě.# &;ȩ/1#;ȿ/($8":ċ"!!)("\'#&\'#=." 7Š'),f('<%;k." &"/2#;Ȇ/)$8":Ţ""! )("\'#&\'#=." 7š'),f('<;Ĳ=." 7ţ'),f("<%;ǖ/D#;ȿ/;$;Ğ/2$;ȿ/)$8$:ť$\"#!)($'#(#'#(\"'#&'#=.\" 7Ť"),f(";L./ &;5.) &;,.# &;3"),f("<%;ĭ/' 8!:ŧ!! )=.\" 7Ŧ"),f('<%;Ē." &"/J#;ġ/A$;ȿ/8$;Ē." &"/*$8$:ũ$##" )($\'#(#\'#("\'#&\'#=." 7Ũ'),f(";ĳ.) &;ģ.# &;Ģ"),f("<%;Ĳ/' 8!:ū!! )=.\" 7Ū"),f("<%;Ĥ/J#;ȿ/A$;ĩ/8$;İ.\" &\"/*$8$:ŭ$##! )($'#(#'#(\"'#&'#=.\" 7Ŭ"),f('%;ĥ.# &;Ħ/1#;ȿ/($8":Ů"!!)("\'#&\'#'),f('<%;ȏ/;#;ȿ/2$;ǽ/)$8#:ů#"" )(#\'#("\'#&\'#=." 7ś'),f("<%;ȩ/' 8!:ű!! )=.\" 7Ű"),f("%;Ơ/T#;ī/K$;ȿ/B$$;Ī0#*;Ī&/2$;ơ/)$8%:Ų%\"#!)(%'#($'#(#'#(\"'#&'#"),f("%;ħ/' 8!:ų!! )"),f("%;ħ/' 8!:Ŵ!! )"),f("%;Ƣ/:#;ī/1$;ȿ/($8#:ĩ#!!)(#'#(\"'#&'#"),f('<%;Ĭ/O#;ȿ/F$;į." &"/8$;Ę." &"/*$8$:Ŷ$##! )($\'#(#\'#("\'#&\'#=." 7ŵ'),f("%;è/\\#%<%;ȿ/8#;Ƴ.) &;ơ.# &;į/#$+\")(\"'#&'#=/##&'!&&#/($8\":p\"!!)(\"'#&'#.# &;p"),f("<%$;Į/&#0#*;Į&&&#/' 8!:Ÿ!! )=.\" 7ŷ"),f("%;ǋ/C#;ȿ/:$;Ɓ/1$;ȿ/($8$:p$!!)($'#(#'#(\"'#&'#"),f('<%;ǀ.# &;ǚ/1#;ȿ/($8":ź"!!)("\'#&\'#=." 7Ź'),f("%;ı/;#;Ü/2$;ȿ/)$8#:Ż#\"\"!)(#'#(\"'#&'#"),f("<%;ȉ/D#;ȿ/;$;ǎ/2$;ȿ/)$8$:Ž$\"#!)($'#(#'#(\"'#&'#=.\" 7ż"),f("%;Ǌ/;#;ȿ/2$;L/)$8#:ž#\"\" )(#'#(\"'#&'#"),f("<%;Ĵ/E#;æ/<$;ĵ/3$;ȿ/*$8$:ƀ$##\"!)($'#(#'#(\"'#&'#=.\" 7ſ"),f("<%;Ǩ/D#;ȿ/;$;ǽ/2$;ȿ/)$8$:Ƃ$\"#!)($'#(#'#(\"'#&'#=.\" 7Ɓ"),f('%;Ķ/F#;ķ." &"/8$;ŀ." &"/*$8#:ƃ##"! )(#\'#("\'#&\'#'),f("<%;ȓ/D#;ȿ/;$;Ƈ/2$;ȿ/)$8$:ƅ$\"#!)($'#(#'#(\"'#&'#=.\" 7Ƅ"),f("%;Ĺ/B#;ȿ/9$$;ĸ0#*;ĸ&/)$8#:Ɔ#\"\" )(#'#(\"'#&'#"),f('%;Ĺ/1#;ȿ/($8":Ķ"!!)("\'#&\'#'),f('<;ĺ.# &;Ŀ=." 7Ƈ'),f("%;ȉ/T#;ȿ/K$;Ǚ.# &;Ȫ/<$;ȿ/3$;Ļ/*$8%:ƈ%#$\" )(%'#($'#(#'#(\"'#&'#"),f('<;ļ.) &;Ľ.# &;ľ=." 7Ɖ'),f("%;Ƞ/J#;ȿ/A$;Ȇ.# &;ǖ/2$;ȿ/)$8$:Ɗ$\"#!)($'#(#'#(\"'#&'#"),f('%;Ǉ.# &;ș/1#;ȿ/($8":Ƌ"!!)("\'#&\'#'),f("%;ȃ/D#;ȿ/;$;Ƹ/2$;ȿ/)$8$:ƌ$\"#!)($'#(#'#(\"'#&'#"),f("%;ȁ/D#;ȿ/;$;ƕ/2$;ȿ/)$8$:ƍ$\"#!)($'#(#'#(\"'#&'#"),f('<%;k." &"/J#;Ǘ/A$;ȿ/8$;Ł." &"/*$8$:Ə$##" )($\'#(#\'#("\'#&\'#=." 7Ǝ'),f("%;Ǵ/J#;ȿ/A$;ǘ.# &;ǰ/2$;ȿ/)$8$:Ɛ$\"#!)($'#(#'#(\"'#&'#"),f("%;ř/' 8!:Ƒ!! )"),f("<%;ń/c#;ą.\" &\"/U$;ƃ/L$;ȿ/C$;ņ/:$;¹.\" &\"/,$8&:Ɠ&%%$#! )(&'#(%'#($'#(#'#(\"'#&'#=.\" 7ƒ"),f("%;ü/J#;Ņ.\" &\"/<$;ǲ/3$;ȿ/*$8$:Ɣ$##\"!)($'#(#'#(\"'#&'#"),f('%;ȩ/1#;ȿ/($8":ƕ"!!)("\'#&\'#'),f("<%;ȉ/N#;ȿ/E$;Ż/<$;ȿ/3$;Ĩ/*$8%:Ɨ%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ɩ"),f("<%;ň/¦#;ą.\" &\"/$;Ƅ.\" &\"/$;ȿ/$;ŉ/x$;ȉ/o$;ȿ/f$;Ż/]$;ȿ/T$;ő.\" &\"/F$;Œ.\" &\"/8$;œ//$8,:ƙ,(+*)'$\"! )(,'#(+'#(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ƙ"),f("%;ü/J#;Ą.\" &\"/<$;ȧ/3$;ȿ/*$8$:ƚ$##\"!)($'#(#'#(\"'#&'#"),f('<%;Ŋ." &"/2#;Ō/)$8":Ɯ""! )("\'#&\'#=." 7ƛ'),f('%;ǃ.) &;ƺ.# &;ŋ/1#;ȿ/($8":Ɲ"!!)("\'#&\'#'),f("%;Ƿ/;#;ȿ/2$;ȇ/)$8#:ƞ#\"\" )(#'#(\"'#&'#"),f('<;ō.# &;Ŏ=." 7Ɵ'),f('%;Ǚ.# &;Ƕ/1#;ȿ/($8":Ơ"!!)("\'#&\'#'),f('%;Ȫ/@#;ȿ/7$;ŏ." &"/)$8#:ơ#"" )(#\'#("\'#&\'#'),f("%;ȇ/;#;ȿ/2$;Ő/)$8#:Ƣ#\"\" )(#'#(\"'#&'#"),f("%;è/B#;ȿ/9$$;ç0#*;ç&/)$8#:Į#\"\" )(#'#(\"'#&'#"),f("%;ǧ/c#;ȿ/Z$;Ǟ/Q$;ȿ/H$;Ȝ.) &3ƣ\"\"5)7Ƥ/3$;ȿ/*$8&:ƥ&#%#!)(&'#(%'#($'#(#'#(\"'#&'#"),f("<%;Ȱ/D#;ȿ/;$;p/2$;ȿ/)$8$:Ʀ$\"#!)($'#(#'#(\"'#&'#=.\" 7"),f("<%;Ǆ/W#;ȿ/N$;Ŕ/E$;ȿ/<$;Ǡ/3$;ȿ/*$8&:ƨ&#%#!)(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ƨ"),f("%$;ŕ/&#0#*;ŕ&&&#/' 8!:Ʃ!! )"),f("%;/:#;ȿ/1$;$/($8#:\"#!\")(#'#(\"'#&'#"),f("<%;Ř/T#;ą.\" &\"/F$;ŗ/=$;ȿ/4$;ř/+$8%:ƫ%$$#\" )(%'#($'#(#'#(\"'#&'#=.\" 7ƪ"),f("%;ƅ/;#;ȿ/2$;æ/)$8#:Ƭ#\"\" )(#'#(\"'#&'#.# &;ƅ"),f("%;ü/J#;Ą.\" &\"/<$;Ȯ/3$;ȿ/*$8$:ƭ$##\"!)($'#(#'#(\"'#&'#"),f("%;ƿ/D#;ȿ/;$;¨/2$;ȿ/)$8$:Ĭ$\"#!)($'#(#'#(\"'#&'#"),f("<%;ś/f#;ą.\" &\"/X$;Ż/O$;ȿ/F$;ȫ/=$;ȿ/4$;Ŝ/+$8':Ư'$&%$ )(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ʈ"),f("%;ü/N#;ȯ/E$;ȿ/<$;ȡ/3$;ȿ/*$8%:ư%#$#!)(%'#($'#(#'#(\"'#&'#"),f('%;Ɨ/@#;ȿ/7$;ŝ." &"/)$8#:Ʊ#"" )(#\'#("\'#&\'#'),f("<%;Ơ/Z#;ȿ/Q$;Ş.\" &\"/C$;ȿ/:$;ơ/1$;ȿ/($8&:Ƴ&!#)(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ʋ"),f('%;Š/9#$;ş0#*;ş&/)$8":ƴ""! )("\'#&\'#'),f("%;ȿ/H#;Ƣ/?$;ȿ/6$;Š.\" &\"/($8$:Ƶ$! )($'#(#'#(\"'#&'#"),f("%%<%;ƕ/;#;ȿ/2$;&.# &;đ/#$+#)(#'#(\"'#&'#=.##&&!&'#/:#;p/1$;ȿ/($8#:İ#!!)(#'#(\"'#&'#.x &%;š/n#%%<;Ɠ=.##&&!&'#/,#;ȿ/#$+\")(\"'#&'#/F$;Ď.\" &\"/8$;ď.\" &\"/*$8$:ŏ$##! )($'#(#'#(\"'#&'#"),f(";ƕ.# &;Ƙ"),f('<%;ţ/;#;Ż/2$;ȿ/)$8#:Ʒ#""!)(#\'#("\'#&\'#=." 7ƶ'),f("<%;ǝ/J#;ȿ/A$;Ť/8$;ť.\" &\"/*$8$:ƹ$##! )($'#(#'#(\"'#&'#=.\" 7Ƹ"),f('<%;ȡ./ &;ǲ.) &;ȧ.# &;Ȯ/1#;ȿ/($8":ċ"!!)("\'#&\'#=." 7ƺ'),f("<%;Ǯ/D#;ȿ/;$;Ǥ/2$;ȿ/)$8$:Ƽ$\"#!)($'#(#'#(\"'#&'#=.\" 7ƻ"),f('<%;Ʈ/,#;Ʈ/#$+")("\'#&\'#=." 7ƽ'),f('<;ƪ=." 7ƾ'),f('<;ƫ=." 7ƿ'),f('<;Ƥ=." 7ǀ'),f('<;Ƶ=." 7ǁ'),f('<;Ư=." 7ǂ'),f('<%;ư/,#;ư/#$+")("\'#&\'#=." 7ǃ'),f('<%;Ʊ/,#;Ʊ/#$+")("\'#&\'#=." 7Ǆ'),f('<;ƭ=." 7ǅ'),f('<;Ʈ=." 7ǆ'),f('<;ư=." 7Ǉ'),f('<;Ʊ=." 7ǈ'),f('<%;ư/,#;Ƭ/#$+")("\'#&\'#=." 7ǉ'),f('<%;Ʊ/,#;Ƭ/#$+")("\'#&\'#=." 7Ǌ'),f('<%;Ƭ/1#;Ƭ." &"/#$+")("\'#&\'#=." 7ǋ'),f('<%;Ʋ/,#;Ƭ/#$+")("\'#&\'#=." 7ǌ'),f('<%;ư/,#;Ʊ/#$+")("\'#&\'#=." 7ǌ'),f('<%;Ǻ/@#;ȿ/7$;k." &"/)$8#:ǎ#"" )(#\'#("\'#&\'#=." 7Ǎ'),f('<;ƕ.# &;Ƙ=." 7Ǐ'),f("<%;Ÿ/' 8!:Ǒ!! )=.\" 7ǐ"),f('<%;ż." &"/2#;Ÿ/)$8":Ǔ""! )("\'#&\'#=." 7ǒ'),f('<%;ż." &"/2#;Ÿ/)$8":Ǖ""! )("\'#&\'#=." 7ǔ'),f('%;Ÿ/2#;ƣ/)$8":ǖ""! )("\'#&\'#'),f('<%;ſ.) &;ƀ.# &;ž/2#;Ÿ/)$8":ǘ""! )("\'#&\'#=." 7Ǘ'),f("%;ȿ/& 8!:Ǚ! )"),f('%;ż/2#;ƀ/)$8":ǚ""! )("\'#&\'#'),f('%;Ÿ/2#;ƣ/)$8":D""! )("\'#&\'#'),f("<%;Ÿ/' 8!:ǜ!! )=.\" 7Ǜ"),f("<%;Ÿ/' 8!:Ǟ!! )=.\" 7ǝ"),f('<%;ż." &"/2#;Ÿ/)$8":Ǡ""! )("\'#&\'#=." 7ǟ'),f('<%;ż." &"/2#;Ÿ/)$8":Ǣ""! )("\'#&\'#=." 7ǡ'),f('<%;ż." &"/2#;Ÿ/)$8":Ǥ""! )("\'#&\'#=." 7ǣ'),f('<%;ż." &"/2#;Ÿ/)$8":Ǧ""! )("\'#&\'#=." 7ǥ'),f('<%;ƈ.# &;Ż/1#;ȿ/($8":Ǩ"!!)("\'#&\'#=." 7ǧ'),f("%;Ż/;#;ȿ/2$;æ/)$8#:ǩ#\"\" )(#'#(\"'#&'#"),f("<%;Ÿ/' 8!:ǫ!! )=.\" 7Ǫ"),f("<%;Ÿ/' 8!:ǭ!! )=.\" 7Ǭ"),f('<%;ƌ/=#%<;Ɠ=.##&&!&\'#/($8":ǯ"!!)("\'#&\'#.Å &%;ƍ/=#%<;Ɠ=.##&&!&\'#/($8":ǰ"!!)("\'#&\'#. &%;Ə/=#%<;Ɠ=.##&&!&\'#/($8":Ǳ"!!)("\'#&\'#.q &%;Ɛ/=#%<;Ɠ=.##&&!&\'#/($8":ǲ"!!)("\'#&\'#.G &%;ƒ/=#%<;Ɠ=.##&&!&\'#/($8":ǳ"!!)("\'#&\'#=." 7Ǯ'),f('<%%3ǵ""5!7Ƕ." &"/F#3Ƿ""5#7Ǹ." &"/2$3ǹ""5$7Ǻ/#$+#)(#\'#("\'#&\'#.k &%3ǻ""5$7Ǽ.5 &3ǽ""5&7Ǿ.) &3ǿ""5$7Ȁ." &"/2#3ȁ""5$7Ȃ/#$+")("\'#&\'#.) &3ȃ""5$7Ȅ/\' 8!:ċ!! )=." 7Ǵ'),f('<%;Ǝ.5 &3Ȇ""5%7ȇ.) &3Ȉ""5$7ȉ/\' 8!:ċ!! )=." 7ȅ'),f('<%3ȋ""5&7Ȍ/i#%$4(""5!7)/,#0)*4(""5!7)&&&#/2#3ȍ""5)7Ȏ/#$+")("\'#&\'#." &"/)$8":ȏ""! )("\'#&\'#=." 7Ȋ'),f('<%3ȑ""5\'7Ȓ. &3ȓ""5\'7Ȕ. &3ȕ""5\'7Ȗ.} &%3ȗ""5$7Ș/7#3ș""5$7Ț." &"/#$+")("\'#&\'#.S &%3ș""5$7Ț/7#3ț""5%7Ȝ." &"/#$+")("\'#&\'#.) &3ȝ""5&7Ȟ/\' 8!:ċ!! )=." 7Ȑ'),f('<%%3Ƞ""5#7ȡ/V#2Ȣ""6Ȣ7ȣ.A &2Ȥ""6Ȥ7ȥ.5 &2Ȧ""6Ȧ7ȧ.) &3Ȩ""5$7ȩ/#$+")("\'#&\'#.q &%3Ȫ""5#7ȫ.A &3ǽ""5&7Ǿ.5 &3Ȭ""5%7ȭ.) &3ǻ""5$7Ǽ." &"/2#3Ƞ""5#7ȡ/#$+")("\'#&\'#.# &;Ƒ/\' 8!:ċ!! )=." 7ȟ'),f('%3Ȯ""5(7ȯ/d#%$4(""5!7)/,#0)*4(""5!7)&&&#/2#3Ȱ""5%7ȱ/#$+")("\'#&\'#/)$8":Ȳ""! )("\'#&\'#'),f('<%3ȴ""5$7ȵ/\' 8!:ċ!! )=." 7ȳ'),f('4ȶ""5!7ȷ'),f('%2ȸ""6ȸ7ȹ/K#$4Ⱥ""5!7Ȼ/,#0)*4Ⱥ""5!7Ȼ&&&#/)$8":ȼ""! )("\'#&\'#'),f(";Ɩ.# &;Ɨ"),f(";ƙ./ &;Ɲ.) &;ƛ.# &;Ɯ"),f("%%<;ȴ.# &;>=.##&&!&'#/J#$;Ɣ.# &;Ɠ/,#0)*;Ɣ.# &;Ɠ&&&#/($8\":Ö\"! )(\"'#&'#"),f("%%<;ȶ.# &;>=.##&&!&'#/J#$;Ɣ.# &;Ɠ/,#0)*;Ɣ.# &;Ɠ&&&#/($8\":Ƚ\"! )(\"'#&'#"),f("%;ƞ/#;ȿ/$%$%%<;ƚ=.##&&!&'#/1#1\"\"5!7Ⱦ/#$+\")(\"'#&'#0G*%%<;ƚ=.##&&!&'#/1#1\"\"5!7Ⱦ/#$+\")(\"'#&'#&/\"!&,)/1$;ƚ/($8$:ȿ$!!)($'#(#'#(\"'#&'#"),f('%$4ɀ""5!7Ɂ0)*4ɀ""5!7Ɂ&/5#;Ɵ/,$;ȿ/#$+#)(#\'#("\'#&\'#'),f('%2ɂ""6ɂ7Ƀ/k#$2Ʉ""6Ʉ7Ʌ.) &4Ɇ""5!7ɇ05*2Ʉ""6Ʉ7Ʌ.) &4Ɇ""5!7ɇ&/7$2ɂ""6ɂ7Ƀ/($8#:Ɉ#!!)(#\'#("\'#&\'#'),f('%2ɉ""6ɉ7Ɋ/k#$26""6677.) &48""5!7905*26""6677.) &48""5!79&/7$2ɉ""6ɉ7Ɋ/($8#:ɋ#!!)(#\'#("\'#&\'#'),f('%2Ɍ""6Ɍ7ɍ/k#$2Ɏ""6Ɏ7ɏ.) &4ɐ""5!7ɑ05*2Ɏ""6Ɏ7ɏ.) &4ɐ""5!7ɑ&/7$2Ɍ""6Ɍ7ɍ/($8#:ɒ#!!)(#\'#("\'#&\'#'),f('<%2ɔ""6ɔ7ɕ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɓ'),f('<%2ɗ""6ɗ7ɘ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɖ'),f('<%2ɚ""6ɚ7ɛ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ə'),f('<%2ɝ""6ɝ7ɞ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɜ'),f('<%2ɠ""6ɠ7ɡ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɟ'),f('<%2ɣ""6ɣ7ɤ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɢ'),f('<%2ɦ""6ɦ7ɧ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɥ'),f('<%2ɩ""6ɩ7ɪ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɨ'),f('<%2ɉ""6ɉ7Ɋ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɫ'),f('<%2ɂ""6ɂ7Ƀ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɬ'),f('<%2Ɍ""6Ɍ7ɍ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɭ'),f('<%2ɯ""6ɯ7ɰ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɮ'),f('<%2ɲ""6ɲ7ɳ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɱ'),f('<%2ɵ""6ɵ7ɶ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɴ'),f('<%2ɷ""6ɷ7ɸ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ǋ'),f('<%2ɺ""6ɺ7ɻ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɹ'),f('<%2ɽ""6ɽ7ɾ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ɼ'),f('<%2ɿ""6ɿ7ʀ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ǂ'),f('<%2ʁ""6ʁ7ʂ/1#;ȿ/($8":""!!)("\'#&\'#=." 7Ǉ'),f('<%2ʃ""6ʃ7ʄ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ǈ'),f('<%2ʆ""6ʆ7ʇ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ʅ'),f('<%2ʉ""6ʉ7ʊ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ʈ'),f('<%2a""6a7b/1#;ȿ/($8":""!!)("\'#&\'#=." 7ʋ'),f('<%2ʍ""6ʍ7ʎ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ʌ'),f('<%2ʐ""6ʐ7ʑ/1#;ȿ/($8":""!!)("\'#&\'#=." 7ʏ'),f('%3ʒ""5%7ʓ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʔ""5&7ʕ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʖ""5#7ʗ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʘ""5%7ʙ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʚ""5#7ʛ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʜ""5%7ʝ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ʞ\"\"5'7ʟ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3ʠ""5#7ʡ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʢ""5"7ʣ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʤ""5#7ʥ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʦ""5&7ʧ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʨ""5-7ʩ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʪ""5&7ʫ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʬ""5%7ʭ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ʮ\"\"5'7ʯ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3ʰ""5"7ʱ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ʲ\"\"5'7ʳ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3ʴ""5$7ʵ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʶ""5$7ʷ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʸ""5%7ʹ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ʺ\"\"5'7ʻ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3ʼ""5&7ʽ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʾ""5&7ʿ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˀ""5(7ˁ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˂""5*7˃/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˄""5&7˅/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˆ""5%7ˇ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˈ""5,7ˉ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˊ""5,7ˋ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˌ""517ˍ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˎ""5(7ˏ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ː\"\"5'7ˑ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3˒""5*7˓/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˔""5(7˕/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˖""5&7˗/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˘""5$7˙/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˚""5&7˛/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˜""5(7˝/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˞""5$7˟/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˠ""5$7ˡ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˢ""5$7ˣ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˤ""5#7˥/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˦""5&7˧/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˨""5&7˩/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˪""5)7˫/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ˬ""5&7˭/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3ˮ\"\"5'7˯/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3˰""5$7˱/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˲""5#7˳/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3˴\"\"5'7˵/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3˶""5$7˷/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˸""5$7˹/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˺""5$7˻/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˼""5%7˽/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3˾""5&7˿/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̀""5"7́/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̂""5&7̃/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̄""5)7̅/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̆""5"7̇/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̈""5%7̉/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3̊\"\"5'7̋/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3̌""5)7̍/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̎""5%7̏/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̐""5&7̑/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3̒\"\"5'7̓/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3̔""5)7̕/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̖""5$7̗/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̘""5"7̙/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̚""5&7̛/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̜""5$7̝/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̞""5#7̟/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̠""5$7̡/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̢""5$7̣/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̤""5%7̥/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̦""5%7̧/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3̨\"\"5'7̩/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3̪""5"7̫/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̬""5#7̭/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3̮\"\"5'7̯/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3y""5$7z/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̰""5"7̱/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̲""5&7̳/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̴""5"7̵/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̶""5"7̷/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̸""5%7̹/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̺""5%7̻/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̼""5$7̽/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̾""5&7̿/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3̀\"\"5'7́/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3͂""5%7̓/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3̈́""5%7ͅ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͆""5)7͇/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͈""5*7͉/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͊""5&7͋/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3͌\"\"5'7͍/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f("%3͎\"\"5'7͏/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3͐""5&7͑/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3͒\"\"5'7͓/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3͔""5(7͕/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͖""5%7͗/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͘""5(7͙/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͚""5#7͛/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͜""5%7͝/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͞""5)7͟/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͠""5&7͡/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͢""5#7ͣ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͤ""5%7ͥ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͦ""5$7ͧ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͨ""5)7ͩ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͪ""5$7ͫ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͬ""5"7ͭ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͮ""5+7ͯ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3Ͱ\"\"5'7ͱ/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3Ͳ""5%7ͳ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ʹ""5&7͵/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3Ͷ""5&7ͷ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3͸""5%7͹/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͺ""5&7ͻ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3ͼ""5&7ͽ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3;""5$7Ϳ/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3΀\"\"5'7΁/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f('%3΂""5$7΃/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3΄""5%7΅/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f('%3Ά""5$7·/8#%<;Ɠ=.##&&!&\'#/#$+")("\'#&\'#'),f("%3Έ\"\"5'7Ή/8#%<;Ɠ=.##&&!&'#/#$+\")(\"'#&'#"),f("%;ȵ/' 8!:Ί!! )"),f(";Ʒ.˹ &;Ƹ.˳ &;ƹ.˭ &;ƺ.˧ &;ƻ.ˡ &;Ƽ.˛ &;ƽ.˕ &;ƾ.ˏ &;ƿ.ˉ &;ǀ.˃ &;ǁ.ʽ &;ǂ.ʷ &;ǃ.ʱ &;Ǆ.ʫ &;ǅ.ʥ &;ǆ.ʟ &;Ǉ.ʙ &;ǈ.ʓ &;ǉ.ʍ &;Ǌ.ʇ &;ǋ.ʁ &;ǌ.ɻ &;Ǎ.ɵ &;ǎ.ɯ &;Ǐ.ɩ &;ǐ.ɣ &;Ǒ.ɝ &;ǒ.ɗ &;Ǔ.ɑ &;ǔ.ɋ &;Ǖ.Ʌ &;ǖ.ȿ &;Ǘ.ȹ &;ǘ.ȳ &;Ǚ.ȭ &;ǚ.ȧ &;Ǜ.ȡ &;ǜ.ț &;ǝ.ȕ &;Ǟ.ȏ &;ǟ.ȉ &;Ǡ.ȃ &;ǡ.ǽ &;Ǣ.Ƿ &;ǣ.Ǳ &;Ǥ.ǫ &;ǥ.ǥ &;Ǧ.ǟ &;ǧ.Ǚ &;Ǩ.Ǔ &;ǩ.Ǎ &;Ǫ.Ǉ &;ǫ.ǁ &;Ǭ.ƻ &;ǭ.Ƶ &;Ǯ.Ư &;ǯ.Ʃ &;ǰ.ƣ &;Ǳ.Ɲ &;ǲ.Ɨ &;ǳ.Ƒ &;Ǵ.Ƌ &;ǵ.ƅ &;Ƕ.ſ &;Ƿ.Ź &;Ǹ.ų &;ǹ.ŭ &;Ǻ.ŧ &;ǻ.š &;Ǽ.ś &;ǽ.ŕ &;Ǿ.ŏ &;ǿ.ŉ &;Ȁ.Ń &;ȁ.Ľ &;Ȃ.ķ &;ȃ.ı &;Ȅ.ī &;ȅ.ĥ &;Ȇ.ğ &;ȇ.ę &;Ȉ.ē &;ȉ.č &;Ȋ.ć &;ȋ.ā &;Ȍ.û &;ȍ.õ &;Ȏ.ï &;ȏ.é &;Ȑ.ã &;ȑ.Ý &;Ȓ.× &;ȓ.Ñ &;Ȕ.Ë &;ȕ.Å &;Ȗ.¿ &;ȗ.¹ &;Ș.³ &;ș.­ &;Ț.§ &;ț.¡ &;Ȝ. &;Ȟ. &;ȟ. &;Ƞ. &;ȡ. &;ȣ.} &;Ȥ.w &;ȥ.q &;Ȧ.k &;ȧ.e &;Ȩ._ &;ȩ.Y &;Ȫ.S &;ȫ.M &;Ȭ.G &;ȭ.A &;Ȯ.; &;ȯ.5 &;Ȱ./ &;ȱ.) &;Ȳ.# &;ȳ"),f(";ƹ.ŧ &;ƻ.š &;Ƽ.ś &;ƾ.ŕ &;ƿ.ŏ &;ǂ.ŉ &;ǅ.Ń &;ǈ.Ľ &;Ǌ.ķ &;ǋ.ı &;Ǎ.ī &;Ǐ.ĥ &;ǐ.ğ &;ǖ.ę &;Ǘ.ē &;Ǚ.č &;ǜ.ć &;ǝ.ā &;ǟ.û &;ǡ.õ &;Ǣ.ï &;Ǥ.é &;Ǩ.ã &;ǩ.Ý &;Ǭ.× &;ǭ.Ñ &;Ǳ.Ë &;ǲ.Å &;Ƕ.¿ &;Ǹ.¹ &;ǹ.³ &;Ǻ.­ &;ǻ.§ &;Ǽ.¡ &;Ȁ. &;Ȅ. &;ȅ. &;Ȇ. &;ȉ. &;Ȋ.} &;ȋ.w &;ȏ.q &;ȓ.k &;ȟ.e &;Ƞ._ &;ȡ.Y &;Ȥ.S &;ȥ.M &;Ȧ.G &;Ȩ.A &;ȩ.; &;Ȫ.5 &;ȫ./ &;ȭ.) &;Ȱ.# &;ȱ"),f(";ȸ.. &%;ȹ/& 8!:΋! )"),f('<%2΍""6΍7Ύ/#$%%<4Ώ""5!7ΐ=.##&&!&\'#/1#1""5!7Ⱦ/#$+")("\'#&\'#0M*%%<4Ώ""5!7ΐ=.##&&!&\'#/1#1""5!7Ⱦ/#$+")("\'#&\'#&/#$+")("\'#&\'#=." 7Ό'),f("<%;Ⱥ/5#;Ⱦ/,$;Ȼ/#$+#)(#'#(\"'#&'#=.\" 7Α"),f('2Β""6Β7Γ'),f('2Δ""6Δ7Ε'),f('$%%<;Ȼ.# &;Ⱥ=.##&&!&\'#/1#1""5!7Ⱦ/#$+")("\'#&\'#/P#0M*%%<;Ȼ.# &;Ⱥ=.##&&!&\'#/1#1""5!7Ⱦ/#$+")("\'#&\'#&&&#'),f(";ȼ.# &;ȹ"),f('%;Ƚ/K#$4Ζ""5!7Η.# &;Ƚ0/*4Ζ""5!7Η.# &;Ƚ&/#$+")("\'#&\'#'),f('<%$4Ζ""5!7Η.# &;ȷ0/*4Ζ""5!7Η.# &;ȷ&/\' 8!:-!! )=." 7Θ'),f('2Ι""6Ι7Κ')],x=0,D=0,w=[{line:1,column:1
}],U=0,M=[],k=0,P={},F=["start","start_streaming","stmt_list","semi_optional","semi_required","stmt_list_tail","type_definition","type_definition_types","datatype_custom","datatype_word_tail","type_definition_args","definition_args_loop","literal_value","literal_null","literal_date","literal_string","literal_string_single","literal_string_schar","literal_blob","literal_text","number_sign","literal_number_signed","literal_number","literal_number_decimal","number_decimal_node","number_decimal_full","number_decimal_fraction","number_decimal_exponent","literal_number_hex","number_hex","number_digit","bind_parameter","bind_parameter_numbered","bind_number_id","bind_parameter_named","bind_parameter_tcl","tcl_suffix","expression_exists","expression_exists_ne","expression_raise","expression_raise_args","raise_args_ignore","raise_args_message","expression_root","expression_wrapped","expression_recur","expression_unary_collate","expression_unary","expression_unary_op","expression_collate","expression_concat","expression_multiply","expression_multiply_op","expression_add","expression_add_op","expression_shift","expression_shift_op","expression_compare","expression_compare_op","expression_equiv","expression_equiv_tails","expression_equiv_null_op","expression_equiv_op","expression_cast","type_alias","expression_case","case_expression","expression_case_when","expression_case_else","expression_postfix","expression_postfix_tail","expression_like","expression_escape","expression_between","expression_between_tail","expression_is_not","expression_in","expression_in_target","expression_list_or_select","expression_and","expression","expression_list","expression_list_loop","expression_list_rest","function_call","function_call_args","args_list_distinct","error_message","stmt","stmt_modifier","modifier_query","stmt_nodes","stmt_commit","stmt_begin","commit_transaction","stmt_begin_modifier","stmt_rollback","rollback_savepoint","savepoint_name","savepoint_alt","stmt_savepoint","stmt_release","stmt_alter","alter_start","alter_action","alter_action_rename","alter_action_add","action_add_modifier","stmt_crud","stmt_core_with","clause_with","clause_with_recursive","clause_with_tables","clause_with_loop","expression_cte","select_alias","select_wrapped","stmt_select_full","stmt_sqlite","stmt_attach","attach_arg","stmt_detach","stmt_vacuum","vacuum_target","stmt_analyze","analyze_arg","stmt_reindex","reindex_arg","stmt_pragma","pragma_expression","pragma_value","pragma_value_literal","pragma_value_bool","pragma_bool_id","pragma_value_name","stmt_crud_types","stmt_select","stmt_core_order","stmt_core_limit","stmt_core_limit_offset","limit_offset_variant","limit_offset_variant_name","select_loop","select_loop_union","select_parts","select_parts_core","select_core_select","select_modifier","select_modifier_distinct","select_modifier_all","select_target","select_target_loop","select_core_from","stmt_core_where","select_core_group","select_core_having","select_node","select_node_star","select_node_star_qualified","select_node_aliased","select_source","source_loop_tail","select_cross_clause","select_join_clause","table_or_sub","table_or_sub_func","table_qualified","table_qualified_id","table_or_sub_index_node","index_node_indexed","index_node_none","table_or_sub_sub","table_or_sub_select","alias","join_operator","join_operator_natural","join_operator_types","operator_types_hand","types_hand_outer","operator_types_misc","join_condition","join_condition_on","join_condition_using","select_parts_values","stmt_core_order_list","stmt_core_order_list_loop","stmt_core_order_list_item","select_star","stmt_fallback_types","stmt_insert","insert_keyword","insert_keyword_ins","insert_keyword_repl","insert_keyword_mod","insert_target","insert_into","insert_into_start","insert_results","loop_columns","loop_column_tail","loop_name","insert_value","insert_value_start","insert_values_list","insert_values_loop","expression_list_wrapped","insert_default","operator_compound","compound_union","compound_union_all","stmt_update","update_start","update_fallback","update_set","update_columns","update_columns_tail","update_column","stmt_delete","delete_start","stmt_create","create_start","create_table_only","create_index_only","create_trigger_only","create_view_only","create_virtual_only","create_table","create_table_start","create_core_tmp","create_core_ine","create_table_source","table_source_def","source_def_rowid","source_def_loop","source_def_tail","source_tbl_loop","source_def_column","source_def_name","column_type","column_constraints","column_constraint_tail","column_constraint","constraint_name","constraint_name_loop","column_constraint_types","column_constraint_foreign","column_constraint_primary","col_primary_start","col_primary_auto","column_constraint_null","constraint_null_types","constraint_null_value","column_constraint_check","column_constraint_default","column_default_values","column_constraint_collate","table_constraint","table_constraint_types","table_constraint_check","table_constraint_primary","primary_start","primary_start_normal","primary_start_unique","primary_columns","primary_columns_index","primary_columns_table","primary_column_tail","primary_column","primary_column_types","column_collate","column_collate_loop","primary_column_dir","primary_conflict","primary_conflict_start","constraint_check","table_constraint_foreign","foreign_start","foreign_clause","foreign_references","foreign_actions","foreign_actions_tail","foreign_action","foreign_action_on","action_on_action","on_action_set","on_action_cascade","on_action_none","foreign_action_match","foreign_deferrable","deferrable_initially","table_source_select","create_index","create_index_start","index_unique","index_on","create_trigger","create_trigger_start","trigger_conditions","trigger_apply_mods","trigger_apply_instead","trigger_do","trigger_do_on","trigger_do_update","do_update_of","do_update_columns","trigger_foreach","trigger_when","trigger_action","action_loop","action_loop_stmt","create_view","id_view_expression","create_view_start","create_as_select","create_virtual","create_virtual_start","virtual_module","virtual_args","virtual_args_loop","virtual_args_tail","virtual_arg_types","virtual_column_name","stmt_drop","drop_start","drop_types","drop_ie","binary_concat","binary_plus","binary_minus","binary_multiply","binary_divide","binary_mod","binary_left","binary_right","binary_and","binary_or","binary_lt","binary_gt","binary_lte","binary_gte","binary_equal","binary_notequal_a","binary_notequal_b","binary_lang_isnt","id_name","id_database","id_function","id_table","id_table_qualified","id_column","column_unqualified","column_qualifiers","id_column_qualified","id_collation","id_savepoint","id_index","id_trigger","id_view","id_pragma","id_cte","id_table_expression","id_constraint_table","id_constraint_column","datatype_types","datatype_text","datatype_real","datatype_real_double","datatype_numeric","datatype_integer","datatype_integer_fp","datatype_none","name_char","unicode_char","name","name_quoted","name_unquoted","name_reserved","name_bracketed","bracket_terminator","name_dblquoted","name_sglquoted","name_backticked","sym_bopen","sym_bclose","sym_popen","sym_pclose","sym_comma","sym_dot","sym_star","sym_quest","sym_sglquote","sym_dblquote","sym_backtick","sym_tilde","sym_plus","sym_minus","sym_equal","sym_amp","sym_pipe","sym_mod","sym_lt","sym_gt","sym_excl","sym_semi","sym_colon","sym_fslash","sym_bslash","ABORT","ACTION","ADD","AFTER","ALL","ALTER","ANALYZE","AND","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FOR","FOREIGN","FROM","FULL","GLOB","GROUP","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LEFT","LIKE","LIMIT","MATCH","NATURAL","NO","NOT","NOTNULL","NULL","OF","OFFSET","ON","OR","ORDER","OUTER","PLAN","PRAGMA","PRIMARY","QUERY","RAISE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RIGHT","ROLLBACK","ROW","ROWID","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TO","TRANSACTION","TRIGGER","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WITH","WITHOUT","reserved_words","reserved_word_list","reserved_critical_list","comment","comment_line","comment_block","comment_block_start","comment_block_end","comment_block_body","block_body_nodes","comment_block_feed","o","_TODO_"],j=[null,null,null,null,null,null,"Type Definition",null,"Custom Datatype Name",null,"Type Definition Arguments",null,null,"Null Literal","Date Literal","String Literal","Single-quoted String Literal",null,"Blob Literal",null,"Number Sign",null,null,null,"Decimal Literal",null,null,"Decimal Literal Exponent","Hexidecimal Literal",null,null,"Bind Parameter","Numbered Bind Parameter",null,"Named Bind Parameter","TCL Bind Parameter",null,"EXISTS Expression","EXISTS Keyword","RAISE Expression","RAISE Expression Arguments","IGNORE Keyword",null,null,null,null,null,null,null,"COLLATE Expression",null,null,null,null,null,null,null,null,null,null,null,null,null,"CAST Expression","Type Alias","CASE Expression",null,"WHEN Clause","ELSE Clause",null,null,"Comparison Expression","ESCAPE Expression","BETWEEN Expression",null,null,"IN Expression",null,null,null,null,"Expression List",null,null,"Function Call","Function Call Arguments",null,"Error Message","Statement","QUERY PLAN","QUERY PLAN Keyword",null,"END Transaction Statement","BEGIN Transaction Statement",null,null,"ROLLBACK Statement","TO Clause",null,null,"SAVEPOINT Statement","RELEASE Statement","ALTER TABLE Statement","ALTER TABLE Keyword",null,"RENAME TO Keyword","ADD COLUMN Keyword",null,null,"WITH Clause",null,null,null,null,"Common Table Expression",null,null,null,null,"ATTACH Statement",null,"DETACH Statement","VACUUM Statement",null,"ANALYZE Statement",null,"REINDEX Statement",null,"PRAGMA Statement",null,null,null,null,null,null,null,"SELECT Statement","ORDER BY Clause","LIMIT Clause","OFFSET Clause",null,null,null,"Union Operation",null,null,"SELECT Results Clause","SELECT Results Modifier",null,null,null,null,"FROM Clause","WHERE Clause","GROUP BY Clause","HAVING Clause",null,null,null,null,null,null,"CROSS JOIN Operation","JOIN Operation",null,null,"Qualified Table","Qualified Table Identifier","Qualfied Table Index",null,null,"SELECT Source","Subquery","Alias","JOIN Operator",null,null,null,null,null,"JOIN Constraint","Join ON Clause","Join USING Clause","VALUES Clause",null,null,"Ordering Expression","Star","Fallback Type","INSERT Statement",null,"INSERT Keyword","REPLACE Keyword","INSERT OR Modifier",null,"INTO Clause","INTO Keyword","VALUES Clause","Column List",null,"Column Name","VALUES Clause","VALUES Keyword",null,null,"Wrapped Expression List","DEFAULT VALUES Clause","Compound Operator","UNION Operator",null,"UPDATE Statement","UPDATE Keyword","UPDATE OR Modifier","SET Clause",null,null,"Column Assignment","DELETE Statement","DELETE Keyword","CREATE Statement",null,null,null,null,null,null,"CREATE TABLE Statement",null,null,"IF NOT EXISTS Modifier",null,"Table Definition",null,null,null,null,"Column Definition",null,"Column Datatype",null,null,"Column Constraint",null,"CONSTRAINT Name",null,"FOREIGN KEY Column Constraint","PRIMARY KEY Column Constraint","PRIMARY KEY Keyword","AUTOINCREMENT Keyword",null,"UNIQUE Column Constraint","NULL Column Constraint","CHECK Column Constraint","DEFAULT Column Constraint",null,"COLLATE Column Constraint","Table Constraint",null,"CHECK Table Constraint","PRIMARY KEY Table Constraint",null,"PRIMARY KEY Keyword","UNIQUE Keyword",null,null,null,null,"Indexed Column",null,"Collation",null,"Column Direction",null,"ON CONFLICT Keyword",null,"FOREIGN KEY Table Constraint","FOREIGN KEY Keyword",null,"REFERENCES Clause",null,null,"FOREIGN KEY Action Clause",null,"FOREIGN KEY Action",null,null,null,null,"DEFERRABLE Clause",null,null,"CREATE INDEX Statement",null,null,"ON Clause","CREATE TRIGGER Statement",null,"Conditional Clause",null,null,"Conditional Action",null,null,null,null,null,"WHEN Clause","Actions Clause",null,null,"CREATE VIEW Statement",null,null,null,"CREATE VIRTUAL TABLE Statement",null,null,"Module Arguments",null,null,null,null,"DROP Statement","DROP Keyword","DROP Type","IF EXISTS Keyword","Or","Add","Subtract","Multiply","Divide","Modulo","Shift Left","Shift Right","Logical AND","Logical OR","Less Than","Greater Than","Less Than Or Equal","Greater Than Or Equal","Equal","Not Equal","Not Equal","IS","Identifier","Database Identifier","Function Identifier","Table Identifier",null,"Column Identifier",null,null,null,"Collation Identifier","Savepoint Identifier","Index Identifier","Trigger Identifier","View Identifier","Pragma Identifier","CTE Identifier",null,"Table Constraint Identifier","Column Constraint Identifier","Datatype Name","TEXT Datatype Name","REAL Datatype Name","DOUBLE Datatype Name","NUMERIC Datatype Name","INTEGER Datatype Name",null,"BLOB Datatype Name",null,null,null,null,null,null,null,null,null,null,null,"Open Bracket","Close Bracket","Open Parenthesis","Close Parenthesis","Comma","Period","Asterisk","Question Mark","Single Quote","Double Quote","Backtick","Tilde","Plus","Minus","Equal","Ampersand","Pipe","Modulo","Less Than","Greater Than","Exclamation","Semicolon","Colon","Forward Slash","Backslash",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"Line Comment","Block Comment",null,null,null,null,null,"Whitespace",null],B="tracer"in t?t.tracer:new i;if("startRule"in t){if(!(t.startRule in v))throw new Error("Can't start parsing from rule \""+t.startRule+'".');S=v[t.startRule]}if((I=p(S))!==N&&x===n.length)return I;throw I!==N&&x<n.length&&$(function(){return{type:"end"}}()),c(M,U<n.length?n.charAt(U):null,U<n.length?s(U,U+1):s(U,U))}var u=function(){function n(n,t){var e=[],r=!0,i=!1,a=void 0;try{for(var u,l=n[Symbol.iterator]();!(r=(u=l.next()).done)&&(e.push(u.value),!t||e.length!==t);r=!0);}catch(n){i=!0,a=n}finally{try{!r&&l.return&&l.return()}finally{if(i)throw a}}return e}return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return n(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};!function(n,t){function e(){this.constructor=n}e.prototype=t.prototype,n.prototype=new e}(r,Error),r.buildMessage=function(n,t){function e(n){return n.charCodeAt(0).toString(16).toUpperCase()}function r(n){return n.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(n){return"\\x0"+e(n)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(n){return"\\x"+e(n)})}function i(n){return n.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,function(n){return"\\x0"+e(n)}).replace(/[\x10-\x1F\x7F-\x9F]/g,function(n){return"\\x"+e(n)})}function a(n){return u[n.type](n)}var u={literal:function(n){return'"'+r(n.text)+'"'},class:function(n){var t=n.parts.map(function(n){return Array.isArray(n)?i(n[0])+"-"+i(n[1]):i(n)});return"["+(n.inverted?"^":"")+t+"]"},any:function(n){return"any character"},end:function(n){return"end of input"},other:function(n){return n.description}};return"Expected "+function(n){var t,e,r=n.map(a);if(r.sort(),r.length>0){for(t=1,e=1;t<r.length;t++)r[t-1]!==r[t]&&(r[e]=r[t],e++);r.length=e}switch(r.length){case 1:return r[0];case 2:return r[0]+" or "+r[1];default:return r.slice(0,-1).join(", ")+", or "+r[r.length-1]}}(n)+" but "+function(n){return n?'"'+r(n)+'"':"end of input"}(t)+" found."},i.prototype.trace=function(n){function t(n){function t(n,t){var e,r="";for(e=0;e<t;e++)r+=n;return r}"object"===("undefined"==typeof console?"undefined":l(console))&&console.log(n.location.start.line+":"+n.location.start.column+"-"+n.location.end.line+":"+n.location.end.column+" "+function(n,e){return n+t(" ",e-n.length)}(n.type,10)+" "+t("  ",e.indentLevel)+n.rule)}var e=this;switch(n.type){case"rule.enter":t(n),this.indentLevel++;break;case"rule.match":case"rule.fail":this.indentLevel--,t(n);break;default:throw new Error("Invalid event type: "+n.type+".")}},t.exports={SyntaxError:r,DefaultTracer:i,parse:a}},{}],3:[function(n,t,e){"use strict";function r(n,t){for(var e=n.length-1;e>=0;e-=1)if(t(n[e]))return e;return-1}function i(n,t){for(var e=n.length,r=0;r<e;r+=1)if(!t(n[r]))return n.slice(0,r);return n}Object.defineProperty(e,"__esModule",{value:!0});e.Tracer=function(){function n(){if(!(this instanceof n))return new n;this.events=[],this.indentation=0,this.whitespaceRule=/(^whitespace)|(char$)|(^[oe]$)|(^sym\_)/i,this.statementRule=/Statement$/i,this.firstNodeRule=/(Statement|Clause)$/i}return n.prototype.trace=function(n){var t,e,i=this;switch(n.indentation=this.indentation,n.type){case"rule.enter":this.events.push(n),this.indentation+=1;break;case"rule.match":this.indentation-=1;break;case"rule.fail":t=r(this.events,function(t){return t.rule===n.rule}),e=r(this.events,function(n){return!i.whitespaceRule.test(n.rule)}),(i.whitespaceRule.test(n.rule)||t===e)&&this.events.splice(t,1),this.indentation-=1}},n.prototype.smartError=function(n){var t,e,r,a,u,l=this,o={indentation:-1},s=!1,$=0;return r=i(this.events.filter(function(n){return null!=n.description&&!l.whitespaceRule.test(n.rule)}).reverse(),function(n){if(/^(sym\_semi)$/i.test(n.rule)&&($+=1),$>1)return!1;if(s){if(/^(stmt)$/i.test(n.rule))return s=!0,!0}else n.indentation>o.indentation?o=n:s=!0;return!0}),r.length&&(e=o.location,u=r.find(function(n){return l.firstNodeRule.test(n.description)&&n.description!==o.description&&n.indentation!==o.indentation}),a=null!=u?this.statementRule.test(o.description)&&this.statementRule.test(u.description)?u.description:o.description+" ("+u.description+")":o.description,t="Syntax error found near "+a,Object.assign(n,{message:t,location:e})),n},n}()},{}]},{},[1])(1)});

/***/ })

});